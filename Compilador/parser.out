Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     assign -> NAME EQUALS expNormal
Rule 3     assign -> NAME EQUALS operacion
Rule 4     expression -> expWhile
Rule 5     expression -> expLineal
Rule 6     expression -> expNormal
Rule 7     expLineal -> PRINT LPAREN expNormal RPAREN
Rule 8     expLineal -> PRINT LPAREN operacion RPAREN
Rule 9     expLineal -> PRINT LPAREN expNormal RPAREN enterNormal
Rule 10    expLineal -> PRINT LPAREN operacion RPAREN enterNormal
Rule 11    expLineal -> PRINT LPAREN expNormal RPAREN enterTab
Rule 12    expLineal -> PRINT LPAREN operacion RPAREN enterTab
Rule 13    expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab
Rule 14    expLineal -> PRINT LPAREN operacion RPAREN enterTabTab
Rule 15    string -> STRING
Rule 16    operacion -> expNormal PLUS expNormal
Rule 17    operacion -> expNormal MINUS expNormal
Rule 18    operacion -> expNormal TIMES expNormal
Rule 19    operacion -> expNormal DIVIDE expNormal
Rule 20    operacion -> expNormal EXPONENTE expNormal
Rule 21    operacion -> expNormal COMPARISON expNormal
Rule 22    operacion -> expNormal LOGICOS expNormal
Rule 23    operacion -> expNormal MODULO expNormal
Rule 24    expression -> MINUS expression
Rule 25    boolean -> CONSTANTES
Rule 26    expLineal -> LPAREN expLineal RPAREN
Rule 27    enterTab -> NEWLN TAB statement enterTab
Rule 28    enterTab -> NEWLN TAB statement enterNormal
Rule 29    enterTab -> NEWLN TAB statement
Rule 30    enterTab -> NEWLN TAB expWhileA
Rule 31    enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab
Rule 32    enterTab -> NEWLN TAB BREAK
Rule 33    expBooleana -> expNormal COMPARISON expNormal
Rule 34    expBooleana -> expBooleana LOGICOS expBooleana
Rule 35    expBooleana -> boolean
Rule 36    expBooleana -> LPAREN expBooleana RPAREN
Rule 37    enterTabTab -> NEWLN TAB TAB statement enterNormal
Rule 38    enterTabTab -> NEWLN TAB TAB statement enterTabTab
Rule 39    enterTabTab -> NEWLN TAB TAB statement
Rule 40    enterTabTab -> NEWLN TAB TAB BREAK
Rule 41    enterNormal -> NEWLN statement enterNormal
Rule 42    enterNormal -> NEWLN statement
Rule 43    enterNormal -> NEWLN ELSE POINTS enterTab
Rule 44    expLineal -> operacion
Rule 45    expLineal -> operacion enterNormal
Rule 46    expLineal -> operacion enterTab
Rule 47    expLineal -> operacion enterTabTab
Rule 48    expLineal -> assign
Rule 49    expLineal -> assign enterTab
Rule 50    expLineal -> assign enterTabTab
Rule 51    expLineal -> assign enterNormal
Rule 52    expNormal -> NUMBER
Rule 53    expNormal -> string
Rule 54    expNormal -> boolean
Rule 55    expNormal -> NAME
Rule 56    expWhileA -> WHILE expBooleana POINTS enterTabTab
Rule 57    expWhileA -> WHILE expBooleana POINTS expLineal
Rule 58    expWhileA -> WHILE NAME POINTS enterTabTab
Rule 59    expWhileA -> WHILE NAME POINTS expLineal
Rule 60    expWhile -> WHILE expBooleana POINTS enterTab
Rule 61    expWhile -> WHILE expBooleana POINTS expLineal
Rule 62    expWhile -> WHILE NAME POINTS enterTab
Rule 63    expWhile -> WHILE NAME POINTS expLineal
Rule 64    expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab
Rule 65    expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal

Terminals, with rules where they appear

BREAK                : 32 40
COMPARISON           : 21 33
CONSTANTES           : 25
DIVIDE               : 19
ELSE                 : 31 43
EQUALS               : 2 3
EXPONENTE            : 20
LOGICOS              : 22 34
LPAREN               : 7 8 9 10 11 12 13 14 26 36 64 65
MINUS                : 17 24
MODULO               : 23
NAME                 : 2 3 55 58 59 62 63 64 65
NEWLN                : 27 28 29 30 31 32 37 38 39 40 41 42 43
NUMBER               : 52
PLUS                 : 16
POINTS               : 31 43 56 57 58 59 60 61 62 63 64 65
PRINT                : 7 8 9 10 11 12 13 14
RPAREN               : 7 8 9 10 11 12 13 14 26 36 64 65
STRING               : 15
TAB                  : 27 28 29 30 31 32 37 37 38 38 39 39 40 40
TIMES                : 18
WHILE                : 56 57 58 59 60 61 62 63 64 65
error                : 

Nonterminals, with rules where they appear

assign               : 48 49 50 51
boolean              : 35 54
enterNormal          : 9 10 28 37 41 45 51
enterTab             : 11 12 27 43 46 49 60 62 64
enterTabTab          : 13 14 31 38 47 50 56 58
expBooleana          : 34 34 36 56 57 60 61
expLineal            : 5 26 57 59 61 63 65
expNormal            : 2 6 7 9 11 13 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 33 33
expWhile             : 4
expWhileA            : 30 31
expression           : 1 24
operacion            : 3 8 10 12 14 44 45 46 47
statement            : 27 28 29 37 38 39 41 42 0
string               : 53

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 9
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expNormal                      shift and go to state 8
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expression                     shift and go to state 12

state 1

    (55) expNormal -> NAME .
    (2) assign -> NAME . EQUALS expNormal
    (3) assign -> NAME . EQUALS operacion

    PLUS            reduce using rule 55 (expNormal -> NAME .)
    MINUS           reduce using rule 55 (expNormal -> NAME .)
    TIMES           reduce using rule 55 (expNormal -> NAME .)
    DIVIDE          reduce using rule 55 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 55 (expNormal -> NAME .)
    COMPARISON      reduce using rule 55 (expNormal -> NAME .)
    LOGICOS         reduce using rule 55 (expNormal -> NAME .)
    MODULO          reduce using rule 55 (expNormal -> NAME .)
    $end            reduce using rule 55 (expNormal -> NAME .)
    NEWLN           reduce using rule 55 (expNormal -> NAME .)
    RPAREN          reduce using rule 55 (expNormal -> NAME .)
    ELSE            reduce using rule 55 (expNormal -> NAME .)
    EQUALS          shift and go to state 18


state 2

    (5) expression -> expLineal .

    $end            reduce using rule 5 (expression -> expLineal .)
    NEWLN           reduce using rule 5 (expression -> expLineal .)
    RPAREN          reduce using rule 5 (expression -> expLineal .)
    ELSE            reduce using rule 5 (expression -> expLineal .)


state 3

    (53) expNormal -> string .

    PLUS            reduce using rule 53 (expNormal -> string .)
    MINUS           reduce using rule 53 (expNormal -> string .)
    TIMES           reduce using rule 53 (expNormal -> string .)
    DIVIDE          reduce using rule 53 (expNormal -> string .)
    EXPONENTE       reduce using rule 53 (expNormal -> string .)
    COMPARISON      reduce using rule 53 (expNormal -> string .)
    LOGICOS         reduce using rule 53 (expNormal -> string .)
    MODULO          reduce using rule 53 (expNormal -> string .)
    $end            reduce using rule 53 (expNormal -> string .)
    NEWLN           reduce using rule 53 (expNormal -> string .)
    RPAREN          reduce using rule 53 (expNormal -> string .)
    ELSE            reduce using rule 53 (expNormal -> string .)
    POINTS          reduce using rule 53 (expNormal -> string .)


state 4

    (25) boolean -> CONSTANTES .

    NEWLN           reduce using rule 25 (boolean -> CONSTANTES .)
    $end            reduce using rule 25 (boolean -> CONSTANTES .)
    RPAREN          reduce using rule 25 (boolean -> CONSTANTES .)
    ELSE            reduce using rule 25 (boolean -> CONSTANTES .)
    PLUS            reduce using rule 25 (boolean -> CONSTANTES .)
    MINUS           reduce using rule 25 (boolean -> CONSTANTES .)
    TIMES           reduce using rule 25 (boolean -> CONSTANTES .)
    DIVIDE          reduce using rule 25 (boolean -> CONSTANTES .)
    EXPONENTE       reduce using rule 25 (boolean -> CONSTANTES .)
    COMPARISON      reduce using rule 25 (boolean -> CONSTANTES .)
    LOGICOS         reduce using rule 25 (boolean -> CONSTANTES .)
    MODULO          reduce using rule 25 (boolean -> CONSTANTES .)
    POINTS          reduce using rule 25 (boolean -> CONSTANTES .)


state 5

    (24) expression -> MINUS . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    assign                         shift and go to state 10
    string                         shift and go to state 3
    operacion                      shift and go to state 13
    expNormal                      shift and go to state 8
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expression                     shift and go to state 19

state 6

    (4) expression -> expWhile .

    $end            reduce using rule 4 (expression -> expWhile .)
    NEWLN           reduce using rule 4 (expression -> expWhile .)
    RPAREN          reduce using rule 4 (expression -> expWhile .)
    ELSE            reduce using rule 4 (expression -> expWhile .)


state 7

    (52) expNormal -> NUMBER .

    PLUS            reduce using rule 52 (expNormal -> NUMBER .)
    MINUS           reduce using rule 52 (expNormal -> NUMBER .)
    TIMES           reduce using rule 52 (expNormal -> NUMBER .)
    DIVIDE          reduce using rule 52 (expNormal -> NUMBER .)
    EXPONENTE       reduce using rule 52 (expNormal -> NUMBER .)
    COMPARISON      reduce using rule 52 (expNormal -> NUMBER .)
    LOGICOS         reduce using rule 52 (expNormal -> NUMBER .)
    MODULO          reduce using rule 52 (expNormal -> NUMBER .)
    $end            reduce using rule 52 (expNormal -> NUMBER .)
    NEWLN           reduce using rule 52 (expNormal -> NUMBER .)
    RPAREN          reduce using rule 52 (expNormal -> NUMBER .)
    ELSE            reduce using rule 52 (expNormal -> NUMBER .)
    POINTS          reduce using rule 52 (expNormal -> NUMBER .)


state 8

    (6) expression -> expNormal .
    (16) operacion -> expNormal . PLUS expNormal
    (17) operacion -> expNormal . MINUS expNormal
    (18) operacion -> expNormal . TIMES expNormal
    (19) operacion -> expNormal . DIVIDE expNormal
    (20) operacion -> expNormal . EXPONENTE expNormal
    (21) operacion -> expNormal . COMPARISON expNormal
    (22) operacion -> expNormal . LOGICOS expNormal
    (23) operacion -> expNormal . MODULO expNormal

    $end            reduce using rule 6 (expression -> expNormal .)
    NEWLN           reduce using rule 6 (expression -> expNormal .)
    RPAREN          reduce using rule 6 (expression -> expNormal .)
    ELSE            reduce using rule 6 (expression -> expNormal .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 24
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 26
    EXPONENTE       shift and go to state 23
    COMPARISON      shift and go to state 20
    LOGICOS         shift and go to state 27
    MODULO          shift and go to state 22


state 9

    (0) S' -> statement .



state 10

    (48) expLineal -> assign .
    (49) expLineal -> assign . enterTab
    (50) expLineal -> assign . enterTabTab
    (51) expLineal -> assign . enterNormal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 48 (expLineal -> assign .)
    RPAREN          reduce using rule 48 (expLineal -> assign .)
    ELSE            reduce using rule 48 (expLineal -> assign .)
    NEWLN           shift and go to state 31

  ! NEWLN           [ reduce using rule 48 (expLineal -> assign .) ]

    enterTab                       shift and go to state 28
    enterNormal                    shift and go to state 29
    enterTabTab                    shift and go to state 30

state 11

    (26) expLineal -> LPAREN . expLineal RPAREN
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    operacion                      shift and go to state 13
    string                         shift and go to state 3
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 33
    expNormal                      shift and go to state 34
    assign                         shift and go to state 10

state 12

    (1) statement -> expression .

    $end            reduce using rule 1 (statement -> expression .)
    NEWLN           reduce using rule 1 (statement -> expression .)
    RPAREN          reduce using rule 1 (statement -> expression .)
    ELSE            reduce using rule 1 (statement -> expression .)


state 13

    (44) expLineal -> operacion .
    (45) expLineal -> operacion . enterNormal
    (46) expLineal -> operacion . enterTab
    (47) expLineal -> operacion . enterTabTab
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 44 (expLineal -> operacion .)
    RPAREN          reduce using rule 44 (expLineal -> operacion .)
    ELSE            reduce using rule 44 (expLineal -> operacion .)
    NEWLN           shift and go to state 37

  ! NEWLN           [ reduce using rule 44 (expLineal -> operacion .) ]

    enterTab                       shift and go to state 35
    enterTabTab                    shift and go to state 36
    enterNormal                    shift and go to state 38

state 14

    (60) expWhile -> WHILE . expBooleana POINTS enterTab
    (61) expWhile -> WHILE . expBooleana POINTS expLineal
    (62) expWhile -> WHILE . NAME POINTS enterTab
    (63) expWhile -> WHILE . NAME POINTS expLineal
    (64) expWhile -> WHILE . NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> WHILE . NAME LPAREN RPAREN POINTS expLineal
    (33) expBooleana -> . expNormal COMPARISON expNormal
    (34) expBooleana -> . expBooleana LOGICOS expBooleana
    (35) expBooleana -> . boolean
    (36) expBooleana -> . LPAREN expBooleana RPAREN
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (25) boolean -> . CONSTANTES
    (15) string -> . STRING

    NAME            shift and go to state 39
    LPAREN          shift and go to state 40
    NUMBER          shift and go to state 7
    CONSTANTES      shift and go to state 4
    STRING          shift and go to state 17

    string                         shift and go to state 3
    boolean                        shift and go to state 41
    expBooleana                    shift and go to state 42
    expNormal                      shift and go to state 43

state 15

    (54) expNormal -> boolean .

    PLUS            reduce using rule 54 (expNormal -> boolean .)
    MINUS           reduce using rule 54 (expNormal -> boolean .)
    TIMES           reduce using rule 54 (expNormal -> boolean .)
    DIVIDE          reduce using rule 54 (expNormal -> boolean .)
    EXPONENTE       reduce using rule 54 (expNormal -> boolean .)
    COMPARISON      reduce using rule 54 (expNormal -> boolean .)
    LOGICOS         reduce using rule 54 (expNormal -> boolean .)
    MODULO          reduce using rule 54 (expNormal -> boolean .)
    $end            reduce using rule 54 (expNormal -> boolean .)
    NEWLN           reduce using rule 54 (expNormal -> boolean .)
    RPAREN          reduce using rule 54 (expNormal -> boolean .)
    ELSE            reduce using rule 54 (expNormal -> boolean .)
    POINTS          reduce using rule 54 (expNormal -> boolean .)


state 16

    (7) expLineal -> PRINT . LPAREN expNormal RPAREN
    (8) expLineal -> PRINT . LPAREN operacion RPAREN
    (9) expLineal -> PRINT . LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> PRINT . LPAREN operacion RPAREN enterNormal
    (11) expLineal -> PRINT . LPAREN expNormal RPAREN enterTab
    (12) expLineal -> PRINT . LPAREN operacion RPAREN enterTab
    (13) expLineal -> PRINT . LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> PRINT . LPAREN operacion RPAREN enterTabTab

    LPAREN          shift and go to state 44


state 17

    (15) string -> STRING .

    PLUS            reduce using rule 15 (string -> STRING .)
    MINUS           reduce using rule 15 (string -> STRING .)
    TIMES           reduce using rule 15 (string -> STRING .)
    DIVIDE          reduce using rule 15 (string -> STRING .)
    EXPONENTE       reduce using rule 15 (string -> STRING .)
    COMPARISON      reduce using rule 15 (string -> STRING .)
    LOGICOS         reduce using rule 15 (string -> STRING .)
    MODULO          reduce using rule 15 (string -> STRING .)
    NEWLN           reduce using rule 15 (string -> STRING .)
    $end            reduce using rule 15 (string -> STRING .)
    RPAREN          reduce using rule 15 (string -> STRING .)
    ELSE            reduce using rule 15 (string -> STRING .)
    POINTS          reduce using rule 15 (string -> STRING .)


state 18

    (2) assign -> NAME EQUALS . expNormal
    (3) assign -> NAME EQUALS . operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    operacion                      shift and go to state 46
    string                         shift and go to state 3
    expNormal                      shift and go to state 47
    boolean                        shift and go to state 15

state 19

    (24) expression -> MINUS expression .

    $end            reduce using rule 24 (expression -> MINUS expression .)
    NEWLN           reduce using rule 24 (expression -> MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> MINUS expression .)
    ELSE            reduce using rule 24 (expression -> MINUS expression .)


state 20

    (21) operacion -> expNormal COMPARISON . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 48
    boolean                        shift and go to state 15

state 21

    (18) operacion -> expNormal TIMES . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 49
    boolean                        shift and go to state 15

state 22

    (23) operacion -> expNormal MODULO . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 50
    boolean                        shift and go to state 15

state 23

    (20) operacion -> expNormal EXPONENTE . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 51
    boolean                        shift and go to state 15

state 24

    (17) operacion -> expNormal MINUS . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 52
    boolean                        shift and go to state 15

state 25

    (16) operacion -> expNormal PLUS . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 53
    boolean                        shift and go to state 15

state 26

    (19) operacion -> expNormal DIVIDE . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 54
    boolean                        shift and go to state 15

state 27

    (22) operacion -> expNormal LOGICOS . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 55
    boolean                        shift and go to state 15

state 28

    (49) expLineal -> assign enterTab .

    $end            reduce using rule 49 (expLineal -> assign enterTab .)
    NEWLN           reduce using rule 49 (expLineal -> assign enterTab .)
    RPAREN          reduce using rule 49 (expLineal -> assign enterTab .)
    ELSE            reduce using rule 49 (expLineal -> assign enterTab .)


state 29

    (51) expLineal -> assign enterNormal .

    $end            reduce using rule 51 (expLineal -> assign enterNormal .)
    NEWLN           reduce using rule 51 (expLineal -> assign enterNormal .)
    RPAREN          reduce using rule 51 (expLineal -> assign enterNormal .)
    ELSE            reduce using rule 51 (expLineal -> assign enterNormal .)


state 30

    (50) expLineal -> assign enterTabTab .

    $end            reduce using rule 50 (expLineal -> assign enterTabTab .)
    NEWLN           reduce using rule 50 (expLineal -> assign enterTabTab .)
    RPAREN          reduce using rule 50 (expLineal -> assign enterTabTab .)
    ELSE            reduce using rule 50 (expLineal -> assign enterTabTab .)


state 31

    (27) enterTab -> NEWLN . TAB statement enterTab
    (28) enterTab -> NEWLN . TAB statement enterNormal
    (29) enterTab -> NEWLN . TAB statement
    (30) enterTab -> NEWLN . TAB expWhileA
    (31) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN . TAB BREAK
    (37) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (38) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (39) enterTabTab -> NEWLN . TAB TAB statement
    (40) enterTabTab -> NEWLN . TAB TAB BREAK
    (41) enterNormal -> NEWLN . statement enterNormal
    (42) enterNormal -> NEWLN . statement
    (43) enterNormal -> NEWLN . ELSE POINTS enterTab
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    TAB             shift and go to state 58
    ELSE            shift and go to state 56
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 57
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 32

    (2) assign -> NAME . EQUALS expNormal
    (3) assign -> NAME . EQUALS operacion
    (55) expNormal -> NAME .

    EQUALS          shift and go to state 18
    PLUS            reduce using rule 55 (expNormal -> NAME .)
    MINUS           reduce using rule 55 (expNormal -> NAME .)
    TIMES           reduce using rule 55 (expNormal -> NAME .)
    DIVIDE          reduce using rule 55 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 55 (expNormal -> NAME .)
    COMPARISON      reduce using rule 55 (expNormal -> NAME .)
    LOGICOS         reduce using rule 55 (expNormal -> NAME .)
    MODULO          reduce using rule 55 (expNormal -> NAME .)


state 33

    (26) expLineal -> LPAREN expLineal . RPAREN

    RPAREN          shift and go to state 59


state 34

    (16) operacion -> expNormal . PLUS expNormal
    (17) operacion -> expNormal . MINUS expNormal
    (18) operacion -> expNormal . TIMES expNormal
    (19) operacion -> expNormal . DIVIDE expNormal
    (20) operacion -> expNormal . EXPONENTE expNormal
    (21) operacion -> expNormal . COMPARISON expNormal
    (22) operacion -> expNormal . LOGICOS expNormal
    (23) operacion -> expNormal . MODULO expNormal

    PLUS            shift and go to state 25
    MINUS           shift and go to state 24
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 26
    EXPONENTE       shift and go to state 23
    COMPARISON      shift and go to state 20
    LOGICOS         shift and go to state 27
    MODULO          shift and go to state 22


state 35

    (46) expLineal -> operacion enterTab .

    $end            reduce using rule 46 (expLineal -> operacion enterTab .)
    NEWLN           reduce using rule 46 (expLineal -> operacion enterTab .)
    RPAREN          reduce using rule 46 (expLineal -> operacion enterTab .)
    ELSE            reduce using rule 46 (expLineal -> operacion enterTab .)


state 36

    (47) expLineal -> operacion enterTabTab .

    $end            reduce using rule 47 (expLineal -> operacion enterTabTab .)
    NEWLN           reduce using rule 47 (expLineal -> operacion enterTabTab .)
    RPAREN          reduce using rule 47 (expLineal -> operacion enterTabTab .)
    ELSE            reduce using rule 47 (expLineal -> operacion enterTabTab .)


state 37

    (41) enterNormal -> NEWLN . statement enterNormal
    (42) enterNormal -> NEWLN . statement
    (43) enterNormal -> NEWLN . ELSE POINTS enterTab
    (27) enterTab -> NEWLN . TAB statement enterTab
    (28) enterTab -> NEWLN . TAB statement enterNormal
    (29) enterTab -> NEWLN . TAB statement
    (30) enterTab -> NEWLN . TAB expWhileA
    (31) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN . TAB BREAK
    (37) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (38) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (39) enterTabTab -> NEWLN . TAB TAB statement
    (40) enterTabTab -> NEWLN . TAB TAB BREAK
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    ELSE            shift and go to state 56
    TAB             shift and go to state 58
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 57
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 38

    (45) expLineal -> operacion enterNormal .

    $end            reduce using rule 45 (expLineal -> operacion enterNormal .)
    NEWLN           reduce using rule 45 (expLineal -> operacion enterNormal .)
    RPAREN          reduce using rule 45 (expLineal -> operacion enterNormal .)
    ELSE            reduce using rule 45 (expLineal -> operacion enterNormal .)


state 39

    (62) expWhile -> WHILE NAME . POINTS enterTab
    (63) expWhile -> WHILE NAME . POINTS expLineal
    (64) expWhile -> WHILE NAME . LPAREN RPAREN POINTS enterTab
    (65) expWhile -> WHILE NAME . LPAREN RPAREN POINTS expLineal
    (55) expNormal -> NAME .

    POINTS          shift and go to state 61
    LPAREN          shift and go to state 60
    COMPARISON      reduce using rule 55 (expNormal -> NAME .)


state 40

    (36) expBooleana -> LPAREN . expBooleana RPAREN
    (33) expBooleana -> . expNormal COMPARISON expNormal
    (34) expBooleana -> . expBooleana LOGICOS expBooleana
    (35) expBooleana -> . boolean
    (36) expBooleana -> . LPAREN expBooleana RPAREN
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (25) boolean -> . CONSTANTES
    (15) string -> . STRING

    LPAREN          shift and go to state 40
    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    CONSTANTES      shift and go to state 4
    STRING          shift and go to state 17

    string                         shift and go to state 3
    expBooleana                    shift and go to state 62
    expNormal                      shift and go to state 43
    boolean                        shift and go to state 41

state 41

    (35) expBooleana -> boolean .
    (54) expNormal -> boolean .

    LOGICOS         reduce using rule 35 (expBooleana -> boolean .)
    POINTS          reduce using rule 35 (expBooleana -> boolean .)
    RPAREN          reduce using rule 35 (expBooleana -> boolean .)
    COMPARISON      reduce using rule 54 (expNormal -> boolean .)


state 42

    (60) expWhile -> WHILE expBooleana . POINTS enterTab
    (61) expWhile -> WHILE expBooleana . POINTS expLineal
    (34) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 64
    LOGICOS         shift and go to state 63


state 43

    (33) expBooleana -> expNormal . COMPARISON expNormal

    COMPARISON      shift and go to state 65


state 44

    (7) expLineal -> PRINT LPAREN . expNormal RPAREN
    (8) expLineal -> PRINT LPAREN . operacion RPAREN
    (9) expLineal -> PRINT LPAREN . expNormal RPAREN enterNormal
    (10) expLineal -> PRINT LPAREN . operacion RPAREN enterNormal
    (11) expLineal -> PRINT LPAREN . expNormal RPAREN enterTab
    (12) expLineal -> PRINT LPAREN . operacion RPAREN enterTab
    (13) expLineal -> PRINT LPAREN . expNormal RPAREN enterTabTab
    (14) expLineal -> PRINT LPAREN . operacion RPAREN enterTabTab
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    operacion                      shift and go to state 67
    string                         shift and go to state 3
    boolean                        shift and go to state 15
    expNormal                      shift and go to state 66

state 45

    (55) expNormal -> NAME .

    COMPARISON      reduce using rule 55 (expNormal -> NAME .)
    NEWLN           reduce using rule 55 (expNormal -> NAME .)
    $end            reduce using rule 55 (expNormal -> NAME .)
    RPAREN          reduce using rule 55 (expNormal -> NAME .)
    ELSE            reduce using rule 55 (expNormal -> NAME .)
    POINTS          reduce using rule 55 (expNormal -> NAME .)
    LOGICOS         reduce using rule 55 (expNormal -> NAME .)
    PLUS            reduce using rule 55 (expNormal -> NAME .)
    MINUS           reduce using rule 55 (expNormal -> NAME .)
    TIMES           reduce using rule 55 (expNormal -> NAME .)
    DIVIDE          reduce using rule 55 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 55 (expNormal -> NAME .)
    MODULO          reduce using rule 55 (expNormal -> NAME .)


state 46

    (3) assign -> NAME EQUALS operacion .

    NEWLN           reduce using rule 3 (assign -> NAME EQUALS operacion .)
    $end            reduce using rule 3 (assign -> NAME EQUALS operacion .)
    RPAREN          reduce using rule 3 (assign -> NAME EQUALS operacion .)
    ELSE            reduce using rule 3 (assign -> NAME EQUALS operacion .)


state 47

    (2) assign -> NAME EQUALS expNormal .
    (16) operacion -> expNormal . PLUS expNormal
    (17) operacion -> expNormal . MINUS expNormal
    (18) operacion -> expNormal . TIMES expNormal
    (19) operacion -> expNormal . DIVIDE expNormal
    (20) operacion -> expNormal . EXPONENTE expNormal
    (21) operacion -> expNormal . COMPARISON expNormal
    (22) operacion -> expNormal . LOGICOS expNormal
    (23) operacion -> expNormal . MODULO expNormal

    NEWLN           reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    $end            reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    RPAREN          reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    ELSE            reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 24
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 26
    EXPONENTE       shift and go to state 23
    COMPARISON      shift and go to state 20
    LOGICOS         shift and go to state 27
    MODULO          shift and go to state 22


state 48

    (21) operacion -> expNormal COMPARISON expNormal .

    NEWLN           reduce using rule 21 (operacion -> expNormal COMPARISON expNormal .)
    $end            reduce using rule 21 (operacion -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 21 (operacion -> expNormal COMPARISON expNormal .)
    ELSE            reduce using rule 21 (operacion -> expNormal COMPARISON expNormal .)


state 49

    (18) operacion -> expNormal TIMES expNormal .

    NEWLN           reduce using rule 18 (operacion -> expNormal TIMES expNormal .)
    $end            reduce using rule 18 (operacion -> expNormal TIMES expNormal .)
    RPAREN          reduce using rule 18 (operacion -> expNormal TIMES expNormal .)
    ELSE            reduce using rule 18 (operacion -> expNormal TIMES expNormal .)


state 50

    (23) operacion -> expNormal MODULO expNormal .

    NEWLN           reduce using rule 23 (operacion -> expNormal MODULO expNormal .)
    $end            reduce using rule 23 (operacion -> expNormal MODULO expNormal .)
    RPAREN          reduce using rule 23 (operacion -> expNormal MODULO expNormal .)
    ELSE            reduce using rule 23 (operacion -> expNormal MODULO expNormal .)


state 51

    (20) operacion -> expNormal EXPONENTE expNormal .

    NEWLN           reduce using rule 20 (operacion -> expNormal EXPONENTE expNormal .)
    $end            reduce using rule 20 (operacion -> expNormal EXPONENTE expNormal .)
    RPAREN          reduce using rule 20 (operacion -> expNormal EXPONENTE expNormal .)
    ELSE            reduce using rule 20 (operacion -> expNormal EXPONENTE expNormal .)


state 52

    (17) operacion -> expNormal MINUS expNormal .

    NEWLN           reduce using rule 17 (operacion -> expNormal MINUS expNormal .)
    $end            reduce using rule 17 (operacion -> expNormal MINUS expNormal .)
    RPAREN          reduce using rule 17 (operacion -> expNormal MINUS expNormal .)
    ELSE            reduce using rule 17 (operacion -> expNormal MINUS expNormal .)


state 53

    (16) operacion -> expNormal PLUS expNormal .

    NEWLN           reduce using rule 16 (operacion -> expNormal PLUS expNormal .)
    $end            reduce using rule 16 (operacion -> expNormal PLUS expNormal .)
    RPAREN          reduce using rule 16 (operacion -> expNormal PLUS expNormal .)
    ELSE            reduce using rule 16 (operacion -> expNormal PLUS expNormal .)


state 54

    (19) operacion -> expNormal DIVIDE expNormal .

    NEWLN           reduce using rule 19 (operacion -> expNormal DIVIDE expNormal .)
    $end            reduce using rule 19 (operacion -> expNormal DIVIDE expNormal .)
    RPAREN          reduce using rule 19 (operacion -> expNormal DIVIDE expNormal .)
    ELSE            reduce using rule 19 (operacion -> expNormal DIVIDE expNormal .)


state 55

    (22) operacion -> expNormal LOGICOS expNormal .

    NEWLN           reduce using rule 22 (operacion -> expNormal LOGICOS expNormal .)
    $end            reduce using rule 22 (operacion -> expNormal LOGICOS expNormal .)
    RPAREN          reduce using rule 22 (operacion -> expNormal LOGICOS expNormal .)
    ELSE            reduce using rule 22 (operacion -> expNormal LOGICOS expNormal .)


state 56

    (43) enterNormal -> NEWLN ELSE . POINTS enterTab

    POINTS          shift and go to state 68


state 57

    (41) enterNormal -> NEWLN statement . enterNormal
    (42) enterNormal -> NEWLN statement .
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 42 (enterNormal -> NEWLN statement .)
    RPAREN          reduce using rule 42 (enterNormal -> NEWLN statement .)
    ELSE            reduce using rule 42 (enterNormal -> NEWLN statement .)
    NEWLN           shift and go to state 70

  ! NEWLN           [ reduce using rule 42 (enterNormal -> NEWLN statement .) ]

    enterNormal                    shift and go to state 69

state 58

    (27) enterTab -> NEWLN TAB . statement enterTab
    (28) enterTab -> NEWLN TAB . statement enterNormal
    (29) enterTab -> NEWLN TAB . statement
    (30) enterTab -> NEWLN TAB . expWhileA
    (31) enterTab -> NEWLN TAB . expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN TAB . BREAK
    (37) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (38) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (39) enterTabTab -> NEWLN TAB . TAB statement
    (40) enterTabTab -> NEWLN TAB . TAB BREAK
    (1) statement -> . expression
    (56) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (57) expWhileA -> . WHILE expBooleana POINTS expLineal
    (58) expWhileA -> . WHILE NAME POINTS enterTabTab
    (59) expWhileA -> . WHILE NAME POINTS expLineal
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    BREAK           shift and go to state 75
    TAB             shift and go to state 73
    WHILE           shift and go to state 74
    MINUS           shift and go to state 5
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 72
    string                         shift and go to state 3
    assign                         shift and go to state 10
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    expWhileA                      shift and go to state 71
    operacion                      shift and go to state 13
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 59

    (26) expLineal -> LPAREN expLineal RPAREN .

    $end            reduce using rule 26 (expLineal -> LPAREN expLineal RPAREN .)
    NEWLN           reduce using rule 26 (expLineal -> LPAREN expLineal RPAREN .)
    RPAREN          reduce using rule 26 (expLineal -> LPAREN expLineal RPAREN .)
    ELSE            reduce using rule 26 (expLineal -> LPAREN expLineal RPAREN .)


state 60

    (64) expWhile -> WHILE NAME LPAREN . RPAREN POINTS enterTab
    (65) expWhile -> WHILE NAME LPAREN . RPAREN POINTS expLineal

    RPAREN          shift and go to state 76


state 61

    (62) expWhile -> WHILE NAME POINTS . enterTab
    (63) expWhile -> WHILE NAME POINTS . expLineal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NEWLN           shift and go to state 79
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    enterTab                       shift and go to state 77
    string                         shift and go to state 3
    assign                         shift and go to state 10
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 78
    operacion                      shift and go to state 13
    expNormal                      shift and go to state 34

state 62

    (36) expBooleana -> LPAREN expBooleana . RPAREN
    (34) expBooleana -> expBooleana . LOGICOS expBooleana

    RPAREN          shift and go to state 80
    LOGICOS         shift and go to state 63


state 63

    (34) expBooleana -> expBooleana LOGICOS . expBooleana
    (33) expBooleana -> . expNormal COMPARISON expNormal
    (34) expBooleana -> . expBooleana LOGICOS expBooleana
    (35) expBooleana -> . boolean
    (36) expBooleana -> . LPAREN expBooleana RPAREN
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (25) boolean -> . CONSTANTES
    (15) string -> . STRING

    LPAREN          shift and go to state 40
    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    CONSTANTES      shift and go to state 4
    STRING          shift and go to state 17

    string                         shift and go to state 3
    expBooleana                    shift and go to state 81
    expNormal                      shift and go to state 43
    boolean                        shift and go to state 41

state 64

    (60) expWhile -> WHILE expBooleana POINTS . enterTab
    (61) expWhile -> WHILE expBooleana POINTS . expLineal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NEWLN           shift and go to state 79
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    enterTab                       shift and go to state 82
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    string                         shift and go to state 3
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 83
    expNormal                      shift and go to state 34

state 65

    (33) expBooleana -> expNormal COMPARISON . expNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NUMBER          shift and go to state 7
    NAME            shift and go to state 45
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    string                         shift and go to state 3
    expNormal                      shift and go to state 84
    boolean                        shift and go to state 15

state 66

    (7) expLineal -> PRINT LPAREN expNormal . RPAREN
    (9) expLineal -> PRINT LPAREN expNormal . RPAREN enterNormal
    (11) expLineal -> PRINT LPAREN expNormal . RPAREN enterTab
    (13) expLineal -> PRINT LPAREN expNormal . RPAREN enterTabTab
    (16) operacion -> expNormal . PLUS expNormal
    (17) operacion -> expNormal . MINUS expNormal
    (18) operacion -> expNormal . TIMES expNormal
    (19) operacion -> expNormal . DIVIDE expNormal
    (20) operacion -> expNormal . EXPONENTE expNormal
    (21) operacion -> expNormal . COMPARISON expNormal
    (22) operacion -> expNormal . LOGICOS expNormal
    (23) operacion -> expNormal . MODULO expNormal

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 25
    MINUS           shift and go to state 24
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 26
    EXPONENTE       shift and go to state 23
    COMPARISON      shift and go to state 20
    LOGICOS         shift and go to state 27
    MODULO          shift and go to state 22


state 67

    (8) expLineal -> PRINT LPAREN operacion . RPAREN
    (10) expLineal -> PRINT LPAREN operacion . RPAREN enterNormal
    (12) expLineal -> PRINT LPAREN operacion . RPAREN enterTab
    (14) expLineal -> PRINT LPAREN operacion . RPAREN enterTabTab

    RPAREN          shift and go to state 86


state 68

    (43) enterNormal -> NEWLN ELSE POINTS . enterTab
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK

    NEWLN           shift and go to state 79

    enterTab                       shift and go to state 87

state 69

    (41) enterNormal -> NEWLN statement enterNormal .

    $end            reduce using rule 41 (enterNormal -> NEWLN statement enterNormal .)
    NEWLN           reduce using rule 41 (enterNormal -> NEWLN statement enterNormal .)
    RPAREN          reduce using rule 41 (enterNormal -> NEWLN statement enterNormal .)
    ELSE            reduce using rule 41 (enterNormal -> NEWLN statement enterNormal .)


state 70

    (41) enterNormal -> NEWLN . statement enterNormal
    (42) enterNormal -> NEWLN . statement
    (43) enterNormal -> NEWLN . ELSE POINTS enterTab
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    ELSE            shift and go to state 56
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 57
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 71

    (30) enterTab -> NEWLN TAB expWhileA .
    (31) enterTab -> NEWLN TAB expWhileA . ELSE POINTS enterTabTab

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 30 (enterTab -> NEWLN TAB expWhileA .)
    NEWLN           reduce using rule 30 (enterTab -> NEWLN TAB expWhileA .)
    RPAREN          reduce using rule 30 (enterTab -> NEWLN TAB expWhileA .)
    ELSE            shift and go to state 88

  ! ELSE            [ reduce using rule 30 (enterTab -> NEWLN TAB expWhileA .) ]


state 72

    (27) enterTab -> NEWLN TAB statement . enterTab
    (28) enterTab -> NEWLN TAB statement . enterNormal
    (29) enterTab -> NEWLN TAB statement .
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 29 (enterTab -> NEWLN TAB statement .)
    RPAREN          reduce using rule 29 (enterTab -> NEWLN TAB statement .)
    ELSE            reduce using rule 29 (enterTab -> NEWLN TAB statement .)
    NEWLN           shift and go to state 90

  ! NEWLN           [ reduce using rule 29 (enterTab -> NEWLN TAB statement .) ]

    enterTab                       shift and go to state 89
    enterNormal                    shift and go to state 91

state 73

    (37) enterTabTab -> NEWLN TAB TAB . statement enterNormal
    (38) enterTabTab -> NEWLN TAB TAB . statement enterTabTab
    (39) enterTabTab -> NEWLN TAB TAB . statement
    (40) enterTabTab -> NEWLN TAB TAB . BREAK
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    BREAK           shift and go to state 93
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 92
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 74

    (56) expWhileA -> WHILE . expBooleana POINTS enterTabTab
    (57) expWhileA -> WHILE . expBooleana POINTS expLineal
    (58) expWhileA -> WHILE . NAME POINTS enterTabTab
    (59) expWhileA -> WHILE . NAME POINTS expLineal
    (60) expWhile -> WHILE . expBooleana POINTS enterTab
    (61) expWhile -> WHILE . expBooleana POINTS expLineal
    (62) expWhile -> WHILE . NAME POINTS enterTab
    (63) expWhile -> WHILE . NAME POINTS expLineal
    (64) expWhile -> WHILE . NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> WHILE . NAME LPAREN RPAREN POINTS expLineal
    (33) expBooleana -> . expNormal COMPARISON expNormal
    (34) expBooleana -> . expBooleana LOGICOS expBooleana
    (35) expBooleana -> . boolean
    (36) expBooleana -> . LPAREN expBooleana RPAREN
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (25) boolean -> . CONSTANTES
    (15) string -> . STRING

    NAME            shift and go to state 94
    LPAREN          shift and go to state 40
    NUMBER          shift and go to state 7
    CONSTANTES      shift and go to state 4
    STRING          shift and go to state 17

    string                         shift and go to state 3
    boolean                        shift and go to state 41
    expBooleana                    shift and go to state 95
    expNormal                      shift and go to state 43

state 75

    (32) enterTab -> NEWLN TAB BREAK .

    $end            reduce using rule 32 (enterTab -> NEWLN TAB BREAK .)
    NEWLN           reduce using rule 32 (enterTab -> NEWLN TAB BREAK .)
    RPAREN          reduce using rule 32 (enterTab -> NEWLN TAB BREAK .)
    ELSE            reduce using rule 32 (enterTab -> NEWLN TAB BREAK .)


state 76

    (64) expWhile -> WHILE NAME LPAREN RPAREN . POINTS enterTab
    (65) expWhile -> WHILE NAME LPAREN RPAREN . POINTS expLineal

    POINTS          shift and go to state 96


state 77

    (62) expWhile -> WHILE NAME POINTS enterTab .

    $end            reduce using rule 62 (expWhile -> WHILE NAME POINTS enterTab .)
    NEWLN           reduce using rule 62 (expWhile -> WHILE NAME POINTS enterTab .)
    RPAREN          reduce using rule 62 (expWhile -> WHILE NAME POINTS enterTab .)
    ELSE            reduce using rule 62 (expWhile -> WHILE NAME POINTS enterTab .)


state 78

    (63) expWhile -> WHILE NAME POINTS expLineal .

    $end            reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .)
    NEWLN           reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .)
    RPAREN          reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .)
    ELSE            reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .)


state 79

    (27) enterTab -> NEWLN . TAB statement enterTab
    (28) enterTab -> NEWLN . TAB statement enterNormal
    (29) enterTab -> NEWLN . TAB statement
    (30) enterTab -> NEWLN . TAB expWhileA
    (31) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN . TAB BREAK

    TAB             shift and go to state 97


state 80

    (36) expBooleana -> LPAREN expBooleana RPAREN .

    LOGICOS         reduce using rule 36 (expBooleana -> LPAREN expBooleana RPAREN .)
    POINTS          reduce using rule 36 (expBooleana -> LPAREN expBooleana RPAREN .)
    RPAREN          reduce using rule 36 (expBooleana -> LPAREN expBooleana RPAREN .)


state 81

    (34) expBooleana -> expBooleana LOGICOS expBooleana .
    (34) expBooleana -> expBooleana . LOGICOS expBooleana

    LOGICOS         reduce using rule 34 (expBooleana -> expBooleana LOGICOS expBooleana .)
    POINTS          reduce using rule 34 (expBooleana -> expBooleana LOGICOS expBooleana .)
    RPAREN          reduce using rule 34 (expBooleana -> expBooleana LOGICOS expBooleana .)

  ! LOGICOS         [ shift and go to state 63 ]


state 82

    (60) expWhile -> WHILE expBooleana POINTS enterTab .

    $end            reduce using rule 60 (expWhile -> WHILE expBooleana POINTS enterTab .)
    NEWLN           reduce using rule 60 (expWhile -> WHILE expBooleana POINTS enterTab .)
    RPAREN          reduce using rule 60 (expWhile -> WHILE expBooleana POINTS enterTab .)
    ELSE            reduce using rule 60 (expWhile -> WHILE expBooleana POINTS enterTab .)


state 83

    (61) expWhile -> WHILE expBooleana POINTS expLineal .

    $end            reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .)
    NEWLN           reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .)
    RPAREN          reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .)
    ELSE            reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .)


state 84

    (33) expBooleana -> expNormal COMPARISON expNormal .

    LOGICOS         reduce using rule 33 (expBooleana -> expNormal COMPARISON expNormal .)
    POINTS          reduce using rule 33 (expBooleana -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 33 (expBooleana -> expNormal COMPARISON expNormal .)


state 85

    (7) expLineal -> PRINT LPAREN expNormal RPAREN .
    (9) expLineal -> PRINT LPAREN expNormal RPAREN . enterNormal
    (11) expLineal -> PRINT LPAREN expNormal RPAREN . enterTab
    (13) expLineal -> PRINT LPAREN expNormal RPAREN . enterTabTab
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 7 (expLineal -> PRINT LPAREN expNormal RPAREN .)
    RPAREN          reduce using rule 7 (expLineal -> PRINT LPAREN expNormal RPAREN .)
    ELSE            reduce using rule 7 (expLineal -> PRINT LPAREN expNormal RPAREN .)
    NEWLN           shift and go to state 37

  ! NEWLN           [ reduce using rule 7 (expLineal -> PRINT LPAREN expNormal RPAREN .) ]

    enterTab                       shift and go to state 98
    enterNormal                    shift and go to state 99
    enterTabTab                    shift and go to state 100

state 86

    (8) expLineal -> PRINT LPAREN operacion RPAREN .
    (10) expLineal -> PRINT LPAREN operacion RPAREN . enterNormal
    (12) expLineal -> PRINT LPAREN operacion RPAREN . enterTab
    (14) expLineal -> PRINT LPAREN operacion RPAREN . enterTabTab
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 8 (expLineal -> PRINT LPAREN operacion RPAREN .)
    RPAREN          reduce using rule 8 (expLineal -> PRINT LPAREN operacion RPAREN .)
    ELSE            reduce using rule 8 (expLineal -> PRINT LPAREN operacion RPAREN .)
    NEWLN           shift and go to state 37

  ! NEWLN           [ reduce using rule 8 (expLineal -> PRINT LPAREN operacion RPAREN .) ]

    enterTab                       shift and go to state 101
    enterTabTab                    shift and go to state 103
    enterNormal                    shift and go to state 102

state 87

    (43) enterNormal -> NEWLN ELSE POINTS enterTab .

    $end            reduce using rule 43 (enterNormal -> NEWLN ELSE POINTS enterTab .)
    NEWLN           reduce using rule 43 (enterNormal -> NEWLN ELSE POINTS enterTab .)
    RPAREN          reduce using rule 43 (enterNormal -> NEWLN ELSE POINTS enterTab .)
    ELSE            reduce using rule 43 (enterNormal -> NEWLN ELSE POINTS enterTab .)


state 88

    (31) enterTab -> NEWLN TAB expWhileA ELSE . POINTS enterTabTab

    POINTS          shift and go to state 104


state 89

    (27) enterTab -> NEWLN TAB statement enterTab .

    $end            reduce using rule 27 (enterTab -> NEWLN TAB statement enterTab .)
    NEWLN           reduce using rule 27 (enterTab -> NEWLN TAB statement enterTab .)
    RPAREN          reduce using rule 27 (enterTab -> NEWLN TAB statement enterTab .)
    ELSE            reduce using rule 27 (enterTab -> NEWLN TAB statement enterTab .)


state 90

    (27) enterTab -> NEWLN . TAB statement enterTab
    (28) enterTab -> NEWLN . TAB statement enterNormal
    (29) enterTab -> NEWLN . TAB statement
    (30) enterTab -> NEWLN . TAB expWhileA
    (31) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN . TAB BREAK
    (41) enterNormal -> NEWLN . statement enterNormal
    (42) enterNormal -> NEWLN . statement
    (43) enterNormal -> NEWLN . ELSE POINTS enterTab
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    TAB             shift and go to state 97
    ELSE            shift and go to state 56
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 57
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 91

    (28) enterTab -> NEWLN TAB statement enterNormal .

    $end            reduce using rule 28 (enterTab -> NEWLN TAB statement enterNormal .)
    NEWLN           reduce using rule 28 (enterTab -> NEWLN TAB statement enterNormal .)
    RPAREN          reduce using rule 28 (enterTab -> NEWLN TAB statement enterNormal .)
    ELSE            reduce using rule 28 (enterTab -> NEWLN TAB statement enterNormal .)


state 92

    (37) enterTabTab -> NEWLN TAB TAB statement . enterNormal
    (38) enterTabTab -> NEWLN TAB TAB statement . enterTabTab
    (39) enterTabTab -> NEWLN TAB TAB statement .
    (41) enterNormal -> . NEWLN statement enterNormal
    (42) enterNormal -> . NEWLN statement
    (43) enterNormal -> . NEWLN ELSE POINTS enterTab
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 39 (enterTabTab -> NEWLN TAB TAB statement .)
    RPAREN          reduce using rule 39 (enterTabTab -> NEWLN TAB TAB statement .)
    ELSE            reduce using rule 39 (enterTabTab -> NEWLN TAB TAB statement .)
    NEWLN           shift and go to state 106

  ! NEWLN           [ reduce using rule 39 (enterTabTab -> NEWLN TAB TAB statement .) ]

    enterNormal                    shift and go to state 107
    enterTabTab                    shift and go to state 105

state 93

    (40) enterTabTab -> NEWLN TAB TAB BREAK .

    $end            reduce using rule 40 (enterTabTab -> NEWLN TAB TAB BREAK .)
    NEWLN           reduce using rule 40 (enterTabTab -> NEWLN TAB TAB BREAK .)
    RPAREN          reduce using rule 40 (enterTabTab -> NEWLN TAB TAB BREAK .)
    ELSE            reduce using rule 40 (enterTabTab -> NEWLN TAB TAB BREAK .)


state 94

    (58) expWhileA -> WHILE NAME . POINTS enterTabTab
    (59) expWhileA -> WHILE NAME . POINTS expLineal
    (62) expWhile -> WHILE NAME . POINTS enterTab
    (63) expWhile -> WHILE NAME . POINTS expLineal
    (64) expWhile -> WHILE NAME . LPAREN RPAREN POINTS enterTab
    (65) expWhile -> WHILE NAME . LPAREN RPAREN POINTS expLineal
    (55) expNormal -> NAME .

    POINTS          shift and go to state 108
    LPAREN          shift and go to state 60
    COMPARISON      reduce using rule 55 (expNormal -> NAME .)


state 95

    (56) expWhileA -> WHILE expBooleana . POINTS enterTabTab
    (57) expWhileA -> WHILE expBooleana . POINTS expLineal
    (60) expWhile -> WHILE expBooleana . POINTS enterTab
    (61) expWhile -> WHILE expBooleana . POINTS expLineal
    (34) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 109
    LOGICOS         shift and go to state 63


state 96

    (64) expWhile -> WHILE NAME LPAREN RPAREN POINTS . enterTab
    (65) expWhile -> WHILE NAME LPAREN RPAREN POINTS . expLineal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NEWLN           shift and go to state 79
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    enterTab                       shift and go to state 110
    string                         shift and go to state 3
    assign                         shift and go to state 10
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 111
    operacion                      shift and go to state 13
    expNormal                      shift and go to state 34

state 97

    (27) enterTab -> NEWLN TAB . statement enterTab
    (28) enterTab -> NEWLN TAB . statement enterNormal
    (29) enterTab -> NEWLN TAB . statement
    (30) enterTab -> NEWLN TAB . expWhileA
    (31) enterTab -> NEWLN TAB . expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN TAB . BREAK
    (1) statement -> . expression
    (56) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (57) expWhileA -> . WHILE expBooleana POINTS expLineal
    (58) expWhileA -> . WHILE NAME POINTS enterTabTab
    (59) expWhileA -> . WHILE NAME POINTS expLineal
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    BREAK           shift and go to state 75
    WHILE           shift and go to state 74
    MINUS           shift and go to state 5
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 72
    string                         shift and go to state 3
    assign                         shift and go to state 10
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    expWhileA                      shift and go to state 71
    operacion                      shift and go to state 13
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8

state 98

    (11) expLineal -> PRINT LPAREN expNormal RPAREN enterTab .

    $end            reduce using rule 11 (expLineal -> PRINT LPAREN expNormal RPAREN enterTab .)
    NEWLN           reduce using rule 11 (expLineal -> PRINT LPAREN expNormal RPAREN enterTab .)
    RPAREN          reduce using rule 11 (expLineal -> PRINT LPAREN expNormal RPAREN enterTab .)
    ELSE            reduce using rule 11 (expLineal -> PRINT LPAREN expNormal RPAREN enterTab .)


state 99

    (9) expLineal -> PRINT LPAREN expNormal RPAREN enterNormal .

    $end            reduce using rule 9 (expLineal -> PRINT LPAREN expNormal RPAREN enterNormal .)
    NEWLN           reduce using rule 9 (expLineal -> PRINT LPAREN expNormal RPAREN enterNormal .)
    RPAREN          reduce using rule 9 (expLineal -> PRINT LPAREN expNormal RPAREN enterNormal .)
    ELSE            reduce using rule 9 (expLineal -> PRINT LPAREN expNormal RPAREN enterNormal .)


state 100

    (13) expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab .

    $end            reduce using rule 13 (expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab .)
    NEWLN           reduce using rule 13 (expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab .)
    RPAREN          reduce using rule 13 (expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab .)
    ELSE            reduce using rule 13 (expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab .)


state 101

    (12) expLineal -> PRINT LPAREN operacion RPAREN enterTab .

    $end            reduce using rule 12 (expLineal -> PRINT LPAREN operacion RPAREN enterTab .)
    NEWLN           reduce using rule 12 (expLineal -> PRINT LPAREN operacion RPAREN enterTab .)
    RPAREN          reduce using rule 12 (expLineal -> PRINT LPAREN operacion RPAREN enterTab .)
    ELSE            reduce using rule 12 (expLineal -> PRINT LPAREN operacion RPAREN enterTab .)


state 102

    (10) expLineal -> PRINT LPAREN operacion RPAREN enterNormal .

    $end            reduce using rule 10 (expLineal -> PRINT LPAREN operacion RPAREN enterNormal .)
    NEWLN           reduce using rule 10 (expLineal -> PRINT LPAREN operacion RPAREN enterNormal .)
    RPAREN          reduce using rule 10 (expLineal -> PRINT LPAREN operacion RPAREN enterNormal .)
    ELSE            reduce using rule 10 (expLineal -> PRINT LPAREN operacion RPAREN enterNormal .)


state 103

    (14) expLineal -> PRINT LPAREN operacion RPAREN enterTabTab .

    $end            reduce using rule 14 (expLineal -> PRINT LPAREN operacion RPAREN enterTabTab .)
    NEWLN           reduce using rule 14 (expLineal -> PRINT LPAREN operacion RPAREN enterTabTab .)
    RPAREN          reduce using rule 14 (expLineal -> PRINT LPAREN operacion RPAREN enterTabTab .)
    ELSE            reduce using rule 14 (expLineal -> PRINT LPAREN operacion RPAREN enterTabTab .)


state 104

    (31) enterTab -> NEWLN TAB expWhileA ELSE POINTS . enterTabTab
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK

    NEWLN           shift and go to state 113

    enterTabTab                    shift and go to state 112

state 105

    (38) enterTabTab -> NEWLN TAB TAB statement enterTabTab .

    $end            reduce using rule 38 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    NEWLN           reduce using rule 38 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    RPAREN          reduce using rule 38 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    ELSE            reduce using rule 38 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)


state 106

    (41) enterNormal -> NEWLN . statement enterNormal
    (42) enterNormal -> NEWLN . statement
    (43) enterNormal -> NEWLN . ELSE POINTS enterTab
    (37) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (38) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (39) enterTabTab -> NEWLN . TAB TAB statement
    (40) enterTabTab -> NEWLN . TAB TAB BREAK
    (1) statement -> . expression
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    ELSE            shift and go to state 56
    TAB             shift and go to state 114
    MINUS           shift and go to state 5
    WHILE           shift and go to state 14
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 57
    string                         shift and go to state 3
    assign                         shift and go to state 10
    operacion                      shift and go to state 13
    expNormal                      shift and go to state 8
    expWhile                       shift and go to state 6
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expression                     shift and go to state 12

state 107

    (37) enterTabTab -> NEWLN TAB TAB statement enterNormal .

    $end            reduce using rule 37 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    NEWLN           reduce using rule 37 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    RPAREN          reduce using rule 37 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    ELSE            reduce using rule 37 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)


state 108

    (58) expWhileA -> WHILE NAME POINTS . enterTabTab
    (59) expWhileA -> WHILE NAME POINTS . expLineal
    (62) expWhile -> WHILE NAME POINTS . enterTab
    (63) expWhile -> WHILE NAME POINTS . expLineal
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NEWLN           shift and go to state 116
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    enterTab                       shift and go to state 77
    string                         shift and go to state 3
    assign                         shift and go to state 10
    enterTabTab                    shift and go to state 117
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 115
    expNormal                      shift and go to state 34
    operacion                      shift and go to state 13

state 109

    (56) expWhileA -> WHILE expBooleana POINTS . enterTabTab
    (57) expWhileA -> WHILE expBooleana POINTS . expLineal
    (60) expWhile -> WHILE expBooleana POINTS . enterTab
    (61) expWhile -> WHILE expBooleana POINTS . expLineal
    (37) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (38) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (39) enterTabTab -> . NEWLN TAB TAB statement
    (40) enterTabTab -> . NEWLN TAB TAB BREAK
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (27) enterTab -> . NEWLN TAB statement enterTab
    (28) enterTab -> . NEWLN TAB statement enterNormal
    (29) enterTab -> . NEWLN TAB statement
    (30) enterTab -> . NEWLN TAB expWhileA
    (31) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> . NEWLN TAB BREAK
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    NEWLN           shift and go to state 116
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NAME            shift and go to state 32
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    enterTab                       shift and go to state 82
    assign                         shift and go to state 10
    enterTabTab                    shift and go to state 119
    operacion                      shift and go to state 13
    string                         shift and go to state 3
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 118
    expNormal                      shift and go to state 34

state 110

    (64) expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab .

    $end            reduce using rule 64 (expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab .)
    NEWLN           reduce using rule 64 (expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab .)
    RPAREN          reduce using rule 64 (expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab .)
    ELSE            reduce using rule 64 (expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab .)


state 111

    (65) expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal .

    $end            reduce using rule 65 (expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal .)
    NEWLN           reduce using rule 65 (expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal .)
    RPAREN          reduce using rule 65 (expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal .)
    ELSE            reduce using rule 65 (expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal .)


state 112

    (31) enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab .

    $end            reduce using rule 31 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab .)
    NEWLN           reduce using rule 31 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab .)
    RPAREN          reduce using rule 31 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab .)
    ELSE            reduce using rule 31 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab .)


state 113

    (37) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (38) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (39) enterTabTab -> NEWLN . TAB TAB statement
    (40) enterTabTab -> NEWLN . TAB TAB BREAK

    TAB             shift and go to state 114


state 114

    (37) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (38) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (39) enterTabTab -> NEWLN TAB . TAB statement
    (40) enterTabTab -> NEWLN TAB . TAB BREAK

    TAB             shift and go to state 73


state 115

    (59) expWhileA -> WHILE NAME POINTS expLineal .
    (63) expWhile -> WHILE NAME POINTS expLineal .

  ! reduce/reduce conflict for $end resolved using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for NEWLN resolved using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for RPAREN resolved using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
    $end            reduce using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
    NEWLN           reduce using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
    RPAREN          reduce using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)
    ELSE            reduce using rule 59 (expWhileA -> WHILE NAME POINTS expLineal .)

  ! $end            [ reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! NEWLN           [ reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! RPAREN          [ reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! ELSE            [ reduce using rule 63 (expWhile -> WHILE NAME POINTS expLineal .) ]


state 116

    (37) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (38) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (39) enterTabTab -> NEWLN . TAB TAB statement
    (40) enterTabTab -> NEWLN . TAB TAB BREAK
    (27) enterTab -> NEWLN . TAB statement enterTab
    (28) enterTab -> NEWLN . TAB statement enterNormal
    (29) enterTab -> NEWLN . TAB statement
    (30) enterTab -> NEWLN . TAB expWhileA
    (31) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN . TAB BREAK

    TAB             shift and go to state 120


state 117

    (58) expWhileA -> WHILE NAME POINTS enterTabTab .

    $end            reduce using rule 58 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    NEWLN           reduce using rule 58 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    RPAREN          reduce using rule 58 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    ELSE            reduce using rule 58 (expWhileA -> WHILE NAME POINTS enterTabTab .)


state 118

    (57) expWhileA -> WHILE expBooleana POINTS expLineal .
    (61) expWhile -> WHILE expBooleana POINTS expLineal .

  ! reduce/reduce conflict for $end resolved using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for NEWLN resolved using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for RPAREN resolved using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    $end            reduce using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    NEWLN           reduce using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    RPAREN          reduce using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    ELSE            reduce using rule 57 (expWhileA -> WHILE expBooleana POINTS expLineal .)

  ! $end            [ reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! NEWLN           [ reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! RPAREN          [ reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! ELSE            [ reduce using rule 61 (expWhile -> WHILE expBooleana POINTS expLineal .) ]


state 119

    (56) expWhileA -> WHILE expBooleana POINTS enterTabTab .

    $end            reduce using rule 56 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    NEWLN           reduce using rule 56 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    RPAREN          reduce using rule 56 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    ELSE            reduce using rule 56 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)


state 120

    (37) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (38) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (39) enterTabTab -> NEWLN TAB . TAB statement
    (40) enterTabTab -> NEWLN TAB . TAB BREAK
    (27) enterTab -> NEWLN TAB . statement enterTab
    (28) enterTab -> NEWLN TAB . statement enterNormal
    (29) enterTab -> NEWLN TAB . statement
    (30) enterTab -> NEWLN TAB . expWhileA
    (31) enterTab -> NEWLN TAB . expWhileA ELSE POINTS enterTabTab
    (32) enterTab -> NEWLN TAB . BREAK
    (1) statement -> . expression
    (56) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (57) expWhileA -> . WHILE expBooleana POINTS expLineal
    (58) expWhileA -> . WHILE NAME POINTS enterTabTab
    (59) expWhileA -> . WHILE NAME POINTS expLineal
    (4) expression -> . expWhile
    (5) expression -> . expLineal
    (6) expression -> . expNormal
    (24) expression -> . MINUS expression
    (60) expWhile -> . WHILE expBooleana POINTS enterTab
    (61) expWhile -> . WHILE expBooleana POINTS expLineal
    (62) expWhile -> . WHILE NAME POINTS enterTab
    (63) expWhile -> . WHILE NAME POINTS expLineal
    (64) expWhile -> . WHILE NAME LPAREN RPAREN POINTS enterTab
    (65) expWhile -> . WHILE NAME LPAREN RPAREN POINTS expLineal
    (7) expLineal -> . PRINT LPAREN expNormal RPAREN
    (8) expLineal -> . PRINT LPAREN operacion RPAREN
    (9) expLineal -> . PRINT LPAREN expNormal RPAREN enterNormal
    (10) expLineal -> . PRINT LPAREN operacion RPAREN enterNormal
    (11) expLineal -> . PRINT LPAREN expNormal RPAREN enterTab
    (12) expLineal -> . PRINT LPAREN operacion RPAREN enterTab
    (13) expLineal -> . PRINT LPAREN expNormal RPAREN enterTabTab
    (14) expLineal -> . PRINT LPAREN operacion RPAREN enterTabTab
    (26) expLineal -> . LPAREN expLineal RPAREN
    (44) expLineal -> . operacion
    (45) expLineal -> . operacion enterNormal
    (46) expLineal -> . operacion enterTab
    (47) expLineal -> . operacion enterTabTab
    (48) expLineal -> . assign
    (49) expLineal -> . assign enterTab
    (50) expLineal -> . assign enterTabTab
    (51) expLineal -> . assign enterNormal
    (52) expNormal -> . NUMBER
    (53) expNormal -> . string
    (54) expNormal -> . boolean
    (55) expNormal -> . NAME
    (16) operacion -> . expNormal PLUS expNormal
    (17) operacion -> . expNormal MINUS expNormal
    (18) operacion -> . expNormal TIMES expNormal
    (19) operacion -> . expNormal DIVIDE expNormal
    (20) operacion -> . expNormal EXPONENTE expNormal
    (21) operacion -> . expNormal COMPARISON expNormal
    (22) operacion -> . expNormal LOGICOS expNormal
    (23) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (3) assign -> . NAME EQUALS operacion
    (15) string -> . STRING
    (25) boolean -> . CONSTANTES

    TAB             shift and go to state 73
    BREAK           shift and go to state 75
    WHILE           shift and go to state 74
    MINUS           shift and go to state 5
    PRINT           shift and go to state 16
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 7
    NAME            shift and go to state 1
    STRING          shift and go to state 17
    CONSTANTES      shift and go to state 4

    statement                      shift and go to state 72
    string                         shift and go to state 3
    assign                         shift and go to state 10
    expression                     shift and go to state 12
    expWhile                       shift and go to state 6
    expWhileA                      shift and go to state 71
    operacion                      shift and go to state 13
    boolean                        shift and go to state 15
    expLineal                      shift and go to state 2
    expNormal                      shift and go to state 8
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLN in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 13 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 85 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 86 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 92 resolved as shift
WARNING: reduce/reduce conflict in state 115 resolved using rule (expWhileA -> WHILE NAME POINTS expLineal)
WARNING: rejected rule (expWhile -> WHILE NAME POINTS expLineal) in state 115
WARNING: reduce/reduce conflict in state 118 resolved using rule (expWhileA -> WHILE expBooleana POINTS expLineal)
WARNING: rejected rule (expWhile -> WHILE expBooleana POINTS expLineal) in state 118
