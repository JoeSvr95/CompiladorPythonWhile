Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     assign -> NAME EQUALS expNormal
Rule 3     expression -> expWhile
Rule 4     expression -> expLineal
Rule 5     expression -> expNormal
Rule 6     expLineal -> PRINT LPAREN string RPAREN
Rule 7     string -> STRING
Rule 8     operacion -> expNormal PLUS expNormal
Rule 9     operacion -> expNormal MINUS expNormal
Rule 10    operacion -> expNormal TIMES expNormal
Rule 11    operacion -> expNormal DIVIDE expNormal
Rule 12    operacion -> expNormal EXPONENTE expNormal
Rule 13    operacion -> expNormal COMPARISON expNormal
Rule 14    operacion -> expNormal LOGICOS expNormal
Rule 15    operacion -> expNormal MODULO expNormal
Rule 16    expression -> MINUS expression
Rule 17    boolean -> CONSTANTES
Rule 18    expLineal -> LPAREN expLineal RPAREN
Rule 19    enterTab -> NEWLN TAB statement enterTab
Rule 20    enterTab -> NEWLN TAB statement enterNormal
Rule 21    enterTab -> NEWLN TAB statement
Rule 22    enterTab -> NEWLN TAB expWhileA
Rule 23    enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab
Rule 24    enterTab -> NEWLN TAB BREAK
Rule 25    expBooleana -> expNormal COMPARISON expNormal
Rule 26    expBooleana -> expBooleana LOGICOS expBooleana
Rule 27    expBooleana -> boolean
Rule 28    expBooleana -> LPAREN expBooleana RPAREN
Rule 29    enterTabTab -> NEWLN TAB TAB statement enterNormal
Rule 30    enterTabTab -> NEWLN TAB TAB statement enterTabTab
Rule 31    enterTabTab -> NEWLN TAB TAB statement
Rule 32    enterTabTab -> NEWLN TAB TAB BREAK
Rule 33    enterNormal -> NEWLN statement enterNormal
Rule 34    enterNormal -> NEWLN statement
Rule 35    expLineal -> operacion
Rule 36    expLineal -> assign
Rule 37    expLineal -> operacion enterNormal
Rule 38    expLineal -> assign enterNormal
Rule 39    expNormal -> NUMBER
Rule 40    expNormal -> STRING
Rule 41    expNormal -> boolean
Rule 42    expNormal -> NAME
Rule 43    expWhileA -> WHILE expBooleana POINTS enterTabTab
Rule 44    expWhileA -> WHILE expBooleana POINTS expLineal
Rule 45    expWhileA -> WHILE NAME POINTS enterTabTab
Rule 46    expWhileA -> WHILE NAME POINTS expLineal
Rule 47    expWhile -> WHILE expBooleana POINTS enterTab
Rule 48    expWhile -> WHILE expBooleana POINTS expLineal
Rule 49    expWhile -> WHILE NAME POINTS enterTab
Rule 50    expWhile -> WHILE NAME POINTS expLineal

Terminals, with rules where they appear

BREAK                : 24 32
COMPARISON           : 13 25
CONSTANTES           : 17
DIVIDE               : 11
ELSE                 : 23
EQUALS               : 2
EXPONENTE            : 12
LOGICOS              : 14 26
LPAREN               : 6 18 28
MINUS                : 9 16
MODULO               : 15
NAME                 : 2 42 45 46 49 50
NEWLN                : 19 20 21 22 23 24 29 30 31 32 33 34
NUMBER               : 39
PLUS                 : 8
POINTS               : 23 43 44 45 46 47 48 49 50
PRINT                : 6
RPAREN               : 6 18 28
STRING               : 7 40
TAB                  : 19 20 21 22 23 24 29 29 30 30 31 31 32 32
TIMES                : 10
WHILE                : 43 44 45 46 47 48 49 50
error                : 

Nonterminals, with rules where they appear

assign               : 36 38
boolean              : 27 41
enterNormal          : 20 29 33 37 38
enterTab             : 19 23 47 49
enterTabTab          : 30 43 45
expBooleana          : 26 26 28 43 44 47 48
expLineal            : 4 18 44 46 48 50
expNormal            : 2 5 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 25 25
expWhile             : 3
expWhileA            : 22 23
expression           : 1 16
operacion            : 35 37
statement            : 19 20 21 29 30 31 33 34 0
string               : 6

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expLineal                      shift and go to state 12
    statement                      shift and go to state 7
    operacion                      shift and go to state 14

state 1

    (3) expression -> expWhile .

    $end            reduce using rule 3 (expression -> expWhile .)
    RPAREN          reduce using rule 3 (expression -> expWhile .)
    NEWLN           reduce using rule 3 (expression -> expWhile .)
    ELSE            reduce using rule 3 (expression -> expWhile .)


state 2

    (36) expLineal -> assign .
    (38) expLineal -> assign . enterNormal
    (33) enterNormal -> . NEWLN statement enterNormal
    (34) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 36 (expLineal -> assign .)
    RPAREN          reduce using rule 36 (expLineal -> assign .)
    ELSE            reduce using rule 36 (expLineal -> assign .)
    NEWLN           shift and go to state 17

  ! NEWLN           [ reduce using rule 36 (expLineal -> assign .) ]

    enterNormal                    shift and go to state 18

state 3

    (6) expLineal -> PRINT . LPAREN string RPAREN

    LPAREN          shift and go to state 19


state 4

    (41) expNormal -> boolean .

    PLUS            reduce using rule 41 (expNormal -> boolean .)
    MINUS           reduce using rule 41 (expNormal -> boolean .)
    TIMES           reduce using rule 41 (expNormal -> boolean .)
    DIVIDE          reduce using rule 41 (expNormal -> boolean .)
    EXPONENTE       reduce using rule 41 (expNormal -> boolean .)
    COMPARISON      reduce using rule 41 (expNormal -> boolean .)
    LOGICOS         reduce using rule 41 (expNormal -> boolean .)
    MODULO          reduce using rule 41 (expNormal -> boolean .)
    NEWLN           reduce using rule 41 (expNormal -> boolean .)
    $end            reduce using rule 41 (expNormal -> boolean .)
    RPAREN          reduce using rule 41 (expNormal -> boolean .)
    ELSE            reduce using rule 41 (expNormal -> boolean .)
    POINTS          reduce using rule 41 (expNormal -> boolean .)


state 5

    (5) expression -> expNormal .
    (8) operacion -> expNormal . PLUS expNormal
    (9) operacion -> expNormal . MINUS expNormal
    (10) operacion -> expNormal . TIMES expNormal
    (11) operacion -> expNormal . DIVIDE expNormal
    (12) operacion -> expNormal . EXPONENTE expNormal
    (13) operacion -> expNormal . COMPARISON expNormal
    (14) operacion -> expNormal . LOGICOS expNormal
    (15) operacion -> expNormal . MODULO expNormal

    $end            reduce using rule 5 (expression -> expNormal .)
    RPAREN          reduce using rule 5 (expression -> expNormal .)
    NEWLN           reduce using rule 5 (expression -> expNormal .)
    ELSE            reduce using rule 5 (expression -> expNormal .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 25
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 24
    EXPONENTE       shift and go to state 26
    COMPARISON      shift and go to state 22
    LOGICOS         shift and go to state 23
    MODULO          shift and go to state 21


state 6

    (39) expNormal -> NUMBER .

    COMPARISON      reduce using rule 39 (expNormal -> NUMBER .)
    PLUS            reduce using rule 39 (expNormal -> NUMBER .)
    MINUS           reduce using rule 39 (expNormal -> NUMBER .)
    TIMES           reduce using rule 39 (expNormal -> NUMBER .)
    DIVIDE          reduce using rule 39 (expNormal -> NUMBER .)
    EXPONENTE       reduce using rule 39 (expNormal -> NUMBER .)
    LOGICOS         reduce using rule 39 (expNormal -> NUMBER .)
    MODULO          reduce using rule 39 (expNormal -> NUMBER .)
    NEWLN           reduce using rule 39 (expNormal -> NUMBER .)
    $end            reduce using rule 39 (expNormal -> NUMBER .)
    RPAREN          reduce using rule 39 (expNormal -> NUMBER .)
    ELSE            reduce using rule 39 (expNormal -> NUMBER .)
    POINTS          reduce using rule 39 (expNormal -> NUMBER .)


state 7

    (0) S' -> statement .



state 8

    (42) expNormal -> NAME .
    (2) assign -> NAME . EQUALS expNormal

    PLUS            reduce using rule 42 (expNormal -> NAME .)
    MINUS           reduce using rule 42 (expNormal -> NAME .)
    TIMES           reduce using rule 42 (expNormal -> NAME .)
    DIVIDE          reduce using rule 42 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 42 (expNormal -> NAME .)
    COMPARISON      reduce using rule 42 (expNormal -> NAME .)
    LOGICOS         reduce using rule 42 (expNormal -> NAME .)
    MODULO          reduce using rule 42 (expNormal -> NAME .)
    $end            reduce using rule 42 (expNormal -> NAME .)
    RPAREN          reduce using rule 42 (expNormal -> NAME .)
    NEWLN           reduce using rule 42 (expNormal -> NAME .)
    ELSE            reduce using rule 42 (expNormal -> NAME .)
    EQUALS          shift and go to state 28


state 9

    (18) expLineal -> LPAREN . expLineal RPAREN
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NAME            shift and go to state 29
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    assign                         shift and go to state 2
    expLineal                      shift and go to state 30
    operacion                      shift and go to state 14
    expNormal                      shift and go to state 31
    boolean                        shift and go to state 4

state 10

    (16) expression -> MINUS . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expression                     shift and go to state 32
    expWhile                       shift and go to state 1
    expLineal                      shift and go to state 12
    operacion                      shift and go to state 14
    boolean                        shift and go to state 4
    expNormal                      shift and go to state 5
    assign                         shift and go to state 2

state 11

    (1) statement -> expression .

    $end            reduce using rule 1 (statement -> expression .)
    RPAREN          reduce using rule 1 (statement -> expression .)
    NEWLN           reduce using rule 1 (statement -> expression .)
    ELSE            reduce using rule 1 (statement -> expression .)


state 12

    (4) expression -> expLineal .

    $end            reduce using rule 4 (expression -> expLineal .)
    RPAREN          reduce using rule 4 (expression -> expLineal .)
    NEWLN           reduce using rule 4 (expression -> expLineal .)
    ELSE            reduce using rule 4 (expression -> expLineal .)


state 13

    (47) expWhile -> WHILE . expBooleana POINTS enterTab
    (48) expWhile -> WHILE . expBooleana POINTS expLineal
    (49) expWhile -> WHILE . NAME POINTS enterTab
    (50) expWhile -> WHILE . NAME POINTS expLineal
    (25) expBooleana -> . expNormal COMPARISON expNormal
    (26) expBooleana -> . expBooleana LOGICOS expBooleana
    (27) expBooleana -> . boolean
    (28) expBooleana -> . LPAREN expBooleana RPAREN
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NAME            shift and go to state 35
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 34
    boolean                        shift and go to state 33
    expBooleana                    shift and go to state 37

state 14

    (35) expLineal -> operacion .
    (37) expLineal -> operacion . enterNormal
    (33) enterNormal -> . NEWLN statement enterNormal
    (34) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 35 (expLineal -> operacion .)
    RPAREN          reduce using rule 35 (expLineal -> operacion .)
    ELSE            reduce using rule 35 (expLineal -> operacion .)
    NEWLN           shift and go to state 17

  ! NEWLN           [ reduce using rule 35 (expLineal -> operacion .) ]

    enterNormal                    shift and go to state 38

state 15

    (17) boolean -> CONSTANTES .

    PLUS            reduce using rule 17 (boolean -> CONSTANTES .)
    MINUS           reduce using rule 17 (boolean -> CONSTANTES .)
    TIMES           reduce using rule 17 (boolean -> CONSTANTES .)
    DIVIDE          reduce using rule 17 (boolean -> CONSTANTES .)
    EXPONENTE       reduce using rule 17 (boolean -> CONSTANTES .)
    COMPARISON      reduce using rule 17 (boolean -> CONSTANTES .)
    LOGICOS         reduce using rule 17 (boolean -> CONSTANTES .)
    MODULO          reduce using rule 17 (boolean -> CONSTANTES .)
    NEWLN           reduce using rule 17 (boolean -> CONSTANTES .)
    $end            reduce using rule 17 (boolean -> CONSTANTES .)
    RPAREN          reduce using rule 17 (boolean -> CONSTANTES .)
    ELSE            reduce using rule 17 (boolean -> CONSTANTES .)
    POINTS          reduce using rule 17 (boolean -> CONSTANTES .)


state 16

    (40) expNormal -> STRING .

    COMPARISON      reduce using rule 40 (expNormal -> STRING .)
    PLUS            reduce using rule 40 (expNormal -> STRING .)
    MINUS           reduce using rule 40 (expNormal -> STRING .)
    TIMES           reduce using rule 40 (expNormal -> STRING .)
    DIVIDE          reduce using rule 40 (expNormal -> STRING .)
    EXPONENTE       reduce using rule 40 (expNormal -> STRING .)
    LOGICOS         reduce using rule 40 (expNormal -> STRING .)
    MODULO          reduce using rule 40 (expNormal -> STRING .)
    NEWLN           reduce using rule 40 (expNormal -> STRING .)
    $end            reduce using rule 40 (expNormal -> STRING .)
    RPAREN          reduce using rule 40 (expNormal -> STRING .)
    ELSE            reduce using rule 40 (expNormal -> STRING .)
    POINTS          reduce using rule 40 (expNormal -> STRING .)


state 17

    (33) enterNormal -> NEWLN . statement enterNormal
    (34) enterNormal -> NEWLN . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expLineal                      shift and go to state 12
    statement                      shift and go to state 39
    operacion                      shift and go to state 14

state 18

    (38) expLineal -> assign enterNormal .

    $end            reduce using rule 38 (expLineal -> assign enterNormal .)
    RPAREN          reduce using rule 38 (expLineal -> assign enterNormal .)
    NEWLN           reduce using rule 38 (expLineal -> assign enterNormal .)
    ELSE            reduce using rule 38 (expLineal -> assign enterNormal .)


state 19

    (6) expLineal -> PRINT LPAREN . string RPAREN
    (7) string -> . STRING

    STRING          shift and go to state 40

    string                         shift and go to state 41

state 20

    (8) operacion -> expNormal PLUS . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 43
    boolean                        shift and go to state 4

state 21

    (15) operacion -> expNormal MODULO . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 44
    boolean                        shift and go to state 4

state 22

    (13) operacion -> expNormal COMPARISON . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 45
    boolean                        shift and go to state 4

state 23

    (14) operacion -> expNormal LOGICOS . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 46
    boolean                        shift and go to state 4

state 24

    (11) operacion -> expNormal DIVIDE . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 47
    boolean                        shift and go to state 4

state 25

    (9) operacion -> expNormal MINUS . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 48
    boolean                        shift and go to state 4

state 26

    (12) operacion -> expNormal EXPONENTE . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 49
    boolean                        shift and go to state 4

state 27

    (10) operacion -> expNormal TIMES . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 50
    boolean                        shift and go to state 4

state 28

    (2) assign -> NAME EQUALS . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 51
    boolean                        shift and go to state 4

state 29

    (2) assign -> NAME . EQUALS expNormal
    (42) expNormal -> NAME .

    EQUALS          shift and go to state 28
    PLUS            reduce using rule 42 (expNormal -> NAME .)
    MINUS           reduce using rule 42 (expNormal -> NAME .)
    TIMES           reduce using rule 42 (expNormal -> NAME .)
    DIVIDE          reduce using rule 42 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 42 (expNormal -> NAME .)
    COMPARISON      reduce using rule 42 (expNormal -> NAME .)
    LOGICOS         reduce using rule 42 (expNormal -> NAME .)
    MODULO          reduce using rule 42 (expNormal -> NAME .)


state 30

    (18) expLineal -> LPAREN expLineal . RPAREN

    RPAREN          shift and go to state 52


state 31

    (8) operacion -> expNormal . PLUS expNormal
    (9) operacion -> expNormal . MINUS expNormal
    (10) operacion -> expNormal . TIMES expNormal
    (11) operacion -> expNormal . DIVIDE expNormal
    (12) operacion -> expNormal . EXPONENTE expNormal
    (13) operacion -> expNormal . COMPARISON expNormal
    (14) operacion -> expNormal . LOGICOS expNormal
    (15) operacion -> expNormal . MODULO expNormal

    PLUS            shift and go to state 20
    MINUS           shift and go to state 25
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 24
    EXPONENTE       shift and go to state 26
    COMPARISON      shift and go to state 22
    LOGICOS         shift and go to state 23
    MODULO          shift and go to state 21


state 32

    (16) expression -> MINUS expression .

    $end            reduce using rule 16 (expression -> MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> MINUS expression .)
    NEWLN           reduce using rule 16 (expression -> MINUS expression .)
    ELSE            reduce using rule 16 (expression -> MINUS expression .)


state 33

    (27) expBooleana -> boolean .
    (41) expNormal -> boolean .

    POINTS          reduce using rule 27 (expBooleana -> boolean .)
    LOGICOS         reduce using rule 27 (expBooleana -> boolean .)
    RPAREN          reduce using rule 27 (expBooleana -> boolean .)
    COMPARISON      reduce using rule 41 (expNormal -> boolean .)


state 34

    (25) expBooleana -> expNormal . COMPARISON expNormal

    COMPARISON      shift and go to state 53


state 35

    (49) expWhile -> WHILE NAME . POINTS enterTab
    (50) expWhile -> WHILE NAME . POINTS expLineal
    (42) expNormal -> NAME .

    POINTS          shift and go to state 54
    COMPARISON      reduce using rule 42 (expNormal -> NAME .)


state 36

    (28) expBooleana -> LPAREN . expBooleana RPAREN
    (25) expBooleana -> . expNormal COMPARISON expNormal
    (26) expBooleana -> . expBooleana LOGICOS expBooleana
    (27) expBooleana -> . boolean
    (28) expBooleana -> . LPAREN expBooleana RPAREN
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 34
    boolean                        shift and go to state 33
    expBooleana                    shift and go to state 55

state 37

    (47) expWhile -> WHILE expBooleana . POINTS enterTab
    (48) expWhile -> WHILE expBooleana . POINTS expLineal
    (26) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 57
    LOGICOS         shift and go to state 56


state 38

    (37) expLineal -> operacion enterNormal .

    $end            reduce using rule 37 (expLineal -> operacion enterNormal .)
    RPAREN          reduce using rule 37 (expLineal -> operacion enterNormal .)
    NEWLN           reduce using rule 37 (expLineal -> operacion enterNormal .)
    ELSE            reduce using rule 37 (expLineal -> operacion enterNormal .)


state 39

    (33) enterNormal -> NEWLN statement . enterNormal
    (34) enterNormal -> NEWLN statement .
    (33) enterNormal -> . NEWLN statement enterNormal
    (34) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 34 (enterNormal -> NEWLN statement .)
    RPAREN          reduce using rule 34 (enterNormal -> NEWLN statement .)
    ELSE            reduce using rule 34 (enterNormal -> NEWLN statement .)
    NEWLN           shift and go to state 17

  ! NEWLN           [ reduce using rule 34 (enterNormal -> NEWLN statement .) ]

    enterNormal                    shift and go to state 58

state 40

    (7) string -> STRING .

    RPAREN          reduce using rule 7 (string -> STRING .)


state 41

    (6) expLineal -> PRINT LPAREN string . RPAREN

    RPAREN          shift and go to state 59


state 42

    (42) expNormal -> NAME .

    COMPARISON      reduce using rule 42 (expNormal -> NAME .)
    NEWLN           reduce using rule 42 (expNormal -> NAME .)
    $end            reduce using rule 42 (expNormal -> NAME .)
    RPAREN          reduce using rule 42 (expNormal -> NAME .)
    ELSE            reduce using rule 42 (expNormal -> NAME .)
    POINTS          reduce using rule 42 (expNormal -> NAME .)
    LOGICOS         reduce using rule 42 (expNormal -> NAME .)


state 43

    (8) operacion -> expNormal PLUS expNormal .

    NEWLN           reduce using rule 8 (operacion -> expNormal PLUS expNormal .)
    $end            reduce using rule 8 (operacion -> expNormal PLUS expNormal .)
    RPAREN          reduce using rule 8 (operacion -> expNormal PLUS expNormal .)
    ELSE            reduce using rule 8 (operacion -> expNormal PLUS expNormal .)


state 44

    (15) operacion -> expNormal MODULO expNormal .

    NEWLN           reduce using rule 15 (operacion -> expNormal MODULO expNormal .)
    $end            reduce using rule 15 (operacion -> expNormal MODULO expNormal .)
    RPAREN          reduce using rule 15 (operacion -> expNormal MODULO expNormal .)
    ELSE            reduce using rule 15 (operacion -> expNormal MODULO expNormal .)


state 45

    (13) operacion -> expNormal COMPARISON expNormal .

    NEWLN           reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)
    $end            reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)
    ELSE            reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)


state 46

    (14) operacion -> expNormal LOGICOS expNormal .

    NEWLN           reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)
    $end            reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)
    RPAREN          reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)
    ELSE            reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)


state 47

    (11) operacion -> expNormal DIVIDE expNormal .

    NEWLN           reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)
    $end            reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)
    RPAREN          reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)
    ELSE            reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)


state 48

    (9) operacion -> expNormal MINUS expNormal .

    NEWLN           reduce using rule 9 (operacion -> expNormal MINUS expNormal .)
    $end            reduce using rule 9 (operacion -> expNormal MINUS expNormal .)
    RPAREN          reduce using rule 9 (operacion -> expNormal MINUS expNormal .)
    ELSE            reduce using rule 9 (operacion -> expNormal MINUS expNormal .)


state 49

    (12) operacion -> expNormal EXPONENTE expNormal .

    NEWLN           reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)
    $end            reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)
    RPAREN          reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)
    ELSE            reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)


state 50

    (10) operacion -> expNormal TIMES expNormal .

    NEWLN           reduce using rule 10 (operacion -> expNormal TIMES expNormal .)
    $end            reduce using rule 10 (operacion -> expNormal TIMES expNormal .)
    RPAREN          reduce using rule 10 (operacion -> expNormal TIMES expNormal .)
    ELSE            reduce using rule 10 (operacion -> expNormal TIMES expNormal .)


state 51

    (2) assign -> NAME EQUALS expNormal .

    NEWLN           reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    RPAREN          reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    $end            reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    ELSE            reduce using rule 2 (assign -> NAME EQUALS expNormal .)


state 52

    (18) expLineal -> LPAREN expLineal RPAREN .

    $end            reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)
    RPAREN          reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)
    NEWLN           reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)
    ELSE            reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)


state 53

    (25) expBooleana -> expNormal COMPARISON . expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 60
    boolean                        shift and go to state 4

state 54

    (49) expWhile -> WHILE NAME POINTS . enterTab
    (50) expWhile -> WHILE NAME POINTS . expLineal
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NEWLN           shift and go to state 61
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NAME            shift and go to state 29
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    assign                         shift and go to state 2
    expLineal                      shift and go to state 62
    boolean                        shift and go to state 4
    enterTab                       shift and go to state 63
    operacion                      shift and go to state 14
    expNormal                      shift and go to state 31

state 55

    (28) expBooleana -> LPAREN expBooleana . RPAREN
    (26) expBooleana -> expBooleana . LOGICOS expBooleana

    RPAREN          shift and go to state 64
    LOGICOS         shift and go to state 56


state 56

    (26) expBooleana -> expBooleana LOGICOS . expBooleana
    (25) expBooleana -> . expNormal COMPARISON expNormal
    (26) expBooleana -> . expBooleana LOGICOS expBooleana
    (27) expBooleana -> . boolean
    (28) expBooleana -> . LPAREN expBooleana RPAREN
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    CONSTANTES      shift and go to state 15

    expNormal                      shift and go to state 34
    boolean                        shift and go to state 33
    expBooleana                    shift and go to state 65

state 57

    (47) expWhile -> WHILE expBooleana POINTS . enterTab
    (48) expWhile -> WHILE expBooleana POINTS . expLineal
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NEWLN           shift and go to state 61
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NAME            shift and go to state 29
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    assign                         shift and go to state 2
    expLineal                      shift and go to state 66
    boolean                        shift and go to state 4
    enterTab                       shift and go to state 67
    operacion                      shift and go to state 14
    expNormal                      shift and go to state 31

state 58

    (33) enterNormal -> NEWLN statement enterNormal .

    $end            reduce using rule 33 (enterNormal -> NEWLN statement enterNormal .)
    RPAREN          reduce using rule 33 (enterNormal -> NEWLN statement enterNormal .)
    NEWLN           reduce using rule 33 (enterNormal -> NEWLN statement enterNormal .)
    ELSE            reduce using rule 33 (enterNormal -> NEWLN statement enterNormal .)


state 59

    (6) expLineal -> PRINT LPAREN string RPAREN .

    $end            reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)
    RPAREN          reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)
    NEWLN           reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)
    ELSE            reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)


state 60

    (25) expBooleana -> expNormal COMPARISON expNormal .

    POINTS          reduce using rule 25 (expBooleana -> expNormal COMPARISON expNormal .)
    LOGICOS         reduce using rule 25 (expBooleana -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 25 (expBooleana -> expNormal COMPARISON expNormal .)


state 61

    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA
    (23) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> NEWLN . TAB BREAK

    TAB             shift and go to state 68


state 62

    (50) expWhile -> WHILE NAME POINTS expLineal .

    $end            reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .)
    RPAREN          reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .)
    NEWLN           reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .)
    ELSE            reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .)


state 63

    (49) expWhile -> WHILE NAME POINTS enterTab .

    $end            reduce using rule 49 (expWhile -> WHILE NAME POINTS enterTab .)
    RPAREN          reduce using rule 49 (expWhile -> WHILE NAME POINTS enterTab .)
    NEWLN           reduce using rule 49 (expWhile -> WHILE NAME POINTS enterTab .)
    ELSE            reduce using rule 49 (expWhile -> WHILE NAME POINTS enterTab .)


state 64

    (28) expBooleana -> LPAREN expBooleana RPAREN .

    POINTS          reduce using rule 28 (expBooleana -> LPAREN expBooleana RPAREN .)
    LOGICOS         reduce using rule 28 (expBooleana -> LPAREN expBooleana RPAREN .)
    RPAREN          reduce using rule 28 (expBooleana -> LPAREN expBooleana RPAREN .)


state 65

    (26) expBooleana -> expBooleana LOGICOS expBooleana .
    (26) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          reduce using rule 26 (expBooleana -> expBooleana LOGICOS expBooleana .)
    LOGICOS         reduce using rule 26 (expBooleana -> expBooleana LOGICOS expBooleana .)
    RPAREN          reduce using rule 26 (expBooleana -> expBooleana LOGICOS expBooleana .)

  ! LOGICOS         [ shift and go to state 56 ]


state 66

    (48) expWhile -> WHILE expBooleana POINTS expLineal .

    $end            reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .)
    RPAREN          reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .)
    NEWLN           reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .)
    ELSE            reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .)


state 67

    (47) expWhile -> WHILE expBooleana POINTS enterTab .

    $end            reduce using rule 47 (expWhile -> WHILE expBooleana POINTS enterTab .)
    RPAREN          reduce using rule 47 (expWhile -> WHILE expBooleana POINTS enterTab .)
    NEWLN           reduce using rule 47 (expWhile -> WHILE expBooleana POINTS enterTab .)
    ELSE            reduce using rule 47 (expWhile -> WHILE expBooleana POINTS enterTab .)


state 68

    (19) enterTab -> NEWLN TAB . statement enterTab
    (20) enterTab -> NEWLN TAB . statement enterNormal
    (21) enterTab -> NEWLN TAB . statement
    (22) enterTab -> NEWLN TAB . expWhileA
    (23) enterTab -> NEWLN TAB . expWhileA ELSE POINTS enterTab
    (24) enterTab -> NEWLN TAB . BREAK
    (1) statement -> . expression
    (43) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (44) expWhileA -> . WHILE expBooleana POINTS expLineal
    (45) expWhileA -> . WHILE NAME POINTS enterTabTab
    (46) expWhileA -> . WHILE NAME POINTS expLineal
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    BREAK           shift and go to state 71
    WHILE           shift and go to state 72
    MINUS           shift and go to state 10
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expWhileA                      shift and go to state 69
    expLineal                      shift and go to state 12
    statement                      shift and go to state 70
    operacion                      shift and go to state 14

state 69

    (22) enterTab -> NEWLN TAB expWhileA .
    (23) enterTab -> NEWLN TAB expWhileA . ELSE POINTS enterTab

  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)
    RPAREN          reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)
    NEWLN           reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)
    ELSE            shift and go to state 73

  ! ELSE            [ reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .) ]


state 70

    (19) enterTab -> NEWLN TAB statement . enterTab
    (20) enterTab -> NEWLN TAB statement . enterNormal
    (21) enterTab -> NEWLN TAB statement .
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK
    (33) enterNormal -> . NEWLN statement enterNormal
    (34) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 21 (enterTab -> NEWLN TAB statement .)
    RPAREN          reduce using rule 21 (enterTab -> NEWLN TAB statement .)
    ELSE            reduce using rule 21 (enterTab -> NEWLN TAB statement .)
    NEWLN           shift and go to state 76

  ! NEWLN           [ reduce using rule 21 (enterTab -> NEWLN TAB statement .) ]

    enterTab                       shift and go to state 74
    enterNormal                    shift and go to state 75

state 71

    (24) enterTab -> NEWLN TAB BREAK .

    $end            reduce using rule 24 (enterTab -> NEWLN TAB BREAK .)
    RPAREN          reduce using rule 24 (enterTab -> NEWLN TAB BREAK .)
    NEWLN           reduce using rule 24 (enterTab -> NEWLN TAB BREAK .)
    ELSE            reduce using rule 24 (enterTab -> NEWLN TAB BREAK .)


state 72

    (43) expWhileA -> WHILE . expBooleana POINTS enterTabTab
    (44) expWhileA -> WHILE . expBooleana POINTS expLineal
    (45) expWhileA -> WHILE . NAME POINTS enterTabTab
    (46) expWhileA -> WHILE . NAME POINTS expLineal
    (47) expWhile -> WHILE . expBooleana POINTS enterTab
    (48) expWhile -> WHILE . expBooleana POINTS expLineal
    (49) expWhile -> WHILE . NAME POINTS enterTab
    (50) expWhile -> WHILE . NAME POINTS expLineal
    (25) expBooleana -> . expNormal COMPARISON expNormal
    (26) expBooleana -> . expBooleana LOGICOS expBooleana
    (27) expBooleana -> . boolean
    (28) expBooleana -> . LPAREN expBooleana RPAREN
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NAME            shift and go to state 77
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    boolean                        shift and go to state 33
    expNormal                      shift and go to state 34
    expBooleana                    shift and go to state 78

state 73

    (23) enterTab -> NEWLN TAB expWhileA ELSE . POINTS enterTab

    POINTS          shift and go to state 79


state 74

    (19) enterTab -> NEWLN TAB statement enterTab .

    $end            reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)
    RPAREN          reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)
    NEWLN           reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)
    ELSE            reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)


state 75

    (20) enterTab -> NEWLN TAB statement enterNormal .

    $end            reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)
    RPAREN          reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)
    NEWLN           reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)
    ELSE            reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)


state 76

    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA
    (23) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> NEWLN . TAB BREAK
    (33) enterNormal -> NEWLN . statement enterNormal
    (34) enterNormal -> NEWLN . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 68
    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expLineal                      shift and go to state 12
    statement                      shift and go to state 39
    operacion                      shift and go to state 14

state 77

    (45) expWhileA -> WHILE NAME . POINTS enterTabTab
    (46) expWhileA -> WHILE NAME . POINTS expLineal
    (49) expWhile -> WHILE NAME . POINTS enterTab
    (50) expWhile -> WHILE NAME . POINTS expLineal
    (42) expNormal -> NAME .

    POINTS          shift and go to state 80
    COMPARISON      reduce using rule 42 (expNormal -> NAME .)


state 78

    (43) expWhileA -> WHILE expBooleana . POINTS enterTabTab
    (44) expWhileA -> WHILE expBooleana . POINTS expLineal
    (47) expWhile -> WHILE expBooleana . POINTS enterTab
    (48) expWhile -> WHILE expBooleana . POINTS expLineal
    (26) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 81
    LOGICOS         shift and go to state 56


state 79

    (23) enterTab -> NEWLN TAB expWhileA ELSE POINTS . enterTab
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK

    NEWLN           shift and go to state 61

    enterTab                       shift and go to state 82

state 80

    (45) expWhileA -> WHILE NAME POINTS . enterTabTab
    (46) expWhileA -> WHILE NAME POINTS . expLineal
    (49) expWhile -> WHILE NAME POINTS . enterTab
    (50) expWhile -> WHILE NAME POINTS . expLineal
    (29) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (30) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (31) enterTabTab -> . NEWLN TAB TAB statement
    (32) enterTabTab -> . NEWLN TAB TAB BREAK
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NEWLN           shift and go to state 83
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NAME            shift and go to state 29
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    assign                         shift and go to state 2
    expLineal                      shift and go to state 85
    enterTab                       shift and go to state 63
    operacion                      shift and go to state 14
    enterTabTab                    shift and go to state 84
    expNormal                      shift and go to state 31
    boolean                        shift and go to state 4

state 81

    (43) expWhileA -> WHILE expBooleana POINTS . enterTabTab
    (44) expWhileA -> WHILE expBooleana POINTS . expLineal
    (47) expWhile -> WHILE expBooleana POINTS . enterTab
    (48) expWhile -> WHILE expBooleana POINTS . expLineal
    (29) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (30) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (31) enterTabTab -> . NEWLN TAB TAB statement
    (32) enterTabTab -> . NEWLN TAB TAB BREAK
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (23) enterTab -> . NEWLN TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> . NEWLN TAB BREAK
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NEWLN           shift and go to state 83
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NAME            shift and go to state 29
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    CONSTANTES      shift and go to state 15

    assign                         shift and go to state 2
    expNormal                      shift and go to state 31
    boolean                        shift and go to state 4
    expLineal                      shift and go to state 87
    enterTab                       shift and go to state 67
    operacion                      shift and go to state 14
    enterTabTab                    shift and go to state 86

state 82

    (23) enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab .

    $end            reduce using rule 23 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab .)
    RPAREN          reduce using rule 23 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab .)
    NEWLN           reduce using rule 23 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab .)
    ELSE            reduce using rule 23 (enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab .)


state 83

    (29) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (30) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (31) enterTabTab -> NEWLN . TAB TAB statement
    (32) enterTabTab -> NEWLN . TAB TAB BREAK
    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA
    (23) enterTab -> NEWLN . TAB expWhileA ELSE POINTS enterTab
    (24) enterTab -> NEWLN . TAB BREAK

    TAB             shift and go to state 88


state 84

    (45) expWhileA -> WHILE NAME POINTS enterTabTab .

    $end            reduce using rule 45 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    RPAREN          reduce using rule 45 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    NEWLN           reduce using rule 45 (expWhileA -> WHILE NAME POINTS enterTabTab .)
    ELSE            reduce using rule 45 (expWhileA -> WHILE NAME POINTS enterTabTab .)


state 85

    (46) expWhileA -> WHILE NAME POINTS expLineal .
    (50) expWhile -> WHILE NAME POINTS expLineal .

  ! reduce/reduce conflict for $end resolved using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for RPAREN resolved using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for NEWLN resolved using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
  ! reduce/reduce conflict for ELSE resolved using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
    $end            reduce using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
    RPAREN          reduce using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
    NEWLN           reduce using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)
    ELSE            reduce using rule 46 (expWhileA -> WHILE NAME POINTS expLineal .)

  ! $end            [ reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! RPAREN          [ reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! NEWLN           [ reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .) ]
  ! ELSE            [ reduce using rule 50 (expWhile -> WHILE NAME POINTS expLineal .) ]


state 86

    (43) expWhileA -> WHILE expBooleana POINTS enterTabTab .

    $end            reduce using rule 43 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    RPAREN          reduce using rule 43 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    NEWLN           reduce using rule 43 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    ELSE            reduce using rule 43 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)


state 87

    (44) expWhileA -> WHILE expBooleana POINTS expLineal .
    (48) expWhile -> WHILE expBooleana POINTS expLineal .

  ! reduce/reduce conflict for $end resolved using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for RPAREN resolved using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for NEWLN resolved using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    $end            reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    RPAREN          reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    NEWLN           reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)
    ELSE            reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS expLineal .)

  ! $end            [ reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! RPAREN          [ reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! NEWLN           [ reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .) ]
  ! ELSE            [ reduce using rule 48 (expWhile -> WHILE expBooleana POINTS expLineal .) ]


state 88

    (29) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (30) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (31) enterTabTab -> NEWLN TAB . TAB statement
    (32) enterTabTab -> NEWLN TAB . TAB BREAK
    (19) enterTab -> NEWLN TAB . statement enterTab
    (20) enterTab -> NEWLN TAB . statement enterNormal
    (21) enterTab -> NEWLN TAB . statement
    (22) enterTab -> NEWLN TAB . expWhileA
    (23) enterTab -> NEWLN TAB . expWhileA ELSE POINTS enterTab
    (24) enterTab -> NEWLN TAB . BREAK
    (1) statement -> . expression
    (43) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (44) expWhileA -> . WHILE expBooleana POINTS expLineal
    (45) expWhileA -> . WHILE NAME POINTS enterTabTab
    (46) expWhileA -> . WHILE NAME POINTS expLineal
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 89
    BREAK           shift and go to state 71
    WHILE           shift and go to state 72
    MINUS           shift and go to state 10
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expWhileA                      shift and go to state 69
    expLineal                      shift and go to state 12
    statement                      shift and go to state 70
    operacion                      shift and go to state 14

state 89

    (29) enterTabTab -> NEWLN TAB TAB . statement enterNormal
    (30) enterTabTab -> NEWLN TAB TAB . statement enterTabTab
    (31) enterTabTab -> NEWLN TAB TAB . statement
    (32) enterTabTab -> NEWLN TAB TAB . BREAK
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    BREAK           shift and go to state 91
    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expLineal                      shift and go to state 12
    statement                      shift and go to state 90
    operacion                      shift and go to state 14

state 90

    (29) enterTabTab -> NEWLN TAB TAB statement . enterNormal
    (30) enterTabTab -> NEWLN TAB TAB statement . enterTabTab
    (31) enterTabTab -> NEWLN TAB TAB statement .
    (33) enterNormal -> . NEWLN statement enterNormal
    (34) enterNormal -> . NEWLN statement
    (29) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (30) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (31) enterTabTab -> . NEWLN TAB TAB statement
    (32) enterTabTab -> . NEWLN TAB TAB BREAK

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 31 (enterTabTab -> NEWLN TAB TAB statement .)
    RPAREN          reduce using rule 31 (enterTabTab -> NEWLN TAB TAB statement .)
    ELSE            reduce using rule 31 (enterTabTab -> NEWLN TAB TAB statement .)
    NEWLN           shift and go to state 94

  ! NEWLN           [ reduce using rule 31 (enterTabTab -> NEWLN TAB TAB statement .) ]

    enterTabTab                    shift and go to state 93
    enterNormal                    shift and go to state 92

state 91

    (32) enterTabTab -> NEWLN TAB TAB BREAK .

    $end            reduce using rule 32 (enterTabTab -> NEWLN TAB TAB BREAK .)
    RPAREN          reduce using rule 32 (enterTabTab -> NEWLN TAB TAB BREAK .)
    NEWLN           reduce using rule 32 (enterTabTab -> NEWLN TAB TAB BREAK .)
    ELSE            reduce using rule 32 (enterTabTab -> NEWLN TAB TAB BREAK .)


state 92

    (29) enterTabTab -> NEWLN TAB TAB statement enterNormal .

    $end            reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    RPAREN          reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    NEWLN           reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    ELSE            reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)


state 93

    (30) enterTabTab -> NEWLN TAB TAB statement enterTabTab .

    $end            reduce using rule 30 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    RPAREN          reduce using rule 30 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    NEWLN           reduce using rule 30 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    ELSE            reduce using rule 30 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)


state 94

    (33) enterNormal -> NEWLN . statement enterNormal
    (34) enterNormal -> NEWLN . statement
    (29) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (30) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (31) enterTabTab -> NEWLN . TAB TAB statement
    (32) enterTabTab -> NEWLN . TAB TAB BREAK
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (47) expWhile -> . WHILE expBooleana POINTS enterTab
    (48) expWhile -> . WHILE expBooleana POINTS expLineal
    (49) expWhile -> . WHILE NAME POINTS enterTab
    (50) expWhile -> . WHILE NAME POINTS expLineal
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (35) expLineal -> . operacion
    (36) expLineal -> . assign
    (37) expLineal -> . operacion enterNormal
    (38) expLineal -> . assign enterNormal
    (39) expNormal -> . NUMBER
    (40) expNormal -> . STRING
    (41) expNormal -> . boolean
    (42) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 95
    MINUS           shift and go to state 10
    WHILE           shift and go to state 13
    PRINT           shift and go to state 3
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 6
    STRING          shift and go to state 16
    NAME            shift and go to state 8
    CONSTANTES      shift and go to state 15

    expWhile                       shift and go to state 1
    assign                         shift and go to state 2
    expNormal                      shift and go to state 5
    boolean                        shift and go to state 4
    expression                     shift and go to state 11
    expLineal                      shift and go to state 12
    statement                      shift and go to state 39
    operacion                      shift and go to state 14

state 95

    (29) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (30) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (31) enterTabTab -> NEWLN TAB . TAB statement
    (32) enterTabTab -> NEWLN TAB . TAB BREAK

    TAB             shift and go to state 89

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLN in state 2 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 14 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 39 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 90 resolved as shift
WARNING: reduce/reduce conflict in state 85 resolved using rule (expWhileA -> WHILE NAME POINTS expLineal)
WARNING: rejected rule (expWhile -> WHILE NAME POINTS expLineal) in state 85
WARNING: reduce/reduce conflict in state 87 resolved using rule (expWhileA -> WHILE expBooleana POINTS expLineal)
WARNING: rejected rule (expWhile -> WHILE expBooleana POINTS expLineal) in state 87
