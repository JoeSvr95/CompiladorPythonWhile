Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    BREAK

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     assign -> NAME EQUALS expNormal
Rule 3     expression -> expWhile
Rule 4     expression -> expLineal
Rule 5     expression -> expNormal
Rule 6     expLineal -> PRINT LPAREN string RPAREN
Rule 7     string -> STRING
Rule 8     operacion -> expNormal PLUS expNormal
Rule 9     operacion -> expNormal MINUS expNormal
Rule 10    operacion -> expNormal TIMES expNormal
Rule 11    operacion -> expNormal DIVIDE expNormal
Rule 12    operacion -> expNormal EXPONENTE expNormal
Rule 13    operacion -> expNormal COMPARISON expNormal
Rule 14    operacion -> expNormal LOGICOS expNormal
Rule 15    operacion -> expNormal MODULO expNormal
Rule 16    expression -> MINUS expression
Rule 17    boolean -> CONSTANTES
Rule 18    expLineal -> LPAREN expLineal RPAREN
Rule 19    enterTab -> NEWLN TAB statement enterTab
Rule 20    enterTab -> NEWLN TAB statement enterNormal
Rule 21    enterTab -> NEWLN TAB statement
Rule 22    enterTab -> NEWLN TAB expWhileA
Rule 23    expBooleana -> expNormal COMPARISON expNormal
Rule 24    expBooleana -> expBooleana LOGICOS expBooleana
Rule 25    expBooleana -> boolean
Rule 26    expBooleana -> LPAREN expBooleana RPAREN
Rule 27    enterTabTab -> NEWLN TAB TAB statement enterNormal
Rule 28    enterTabTab -> NEWLN TAB TAB statement enterTabTab
Rule 29    enterTabTab -> NEWLN TAB TAB statement
Rule 30    enterNormal -> NEWLN statement enterNormal
Rule 31    enterNormal -> NEWLN statement
Rule 32    expLineal -> operacion
Rule 33    expLineal -> assign
Rule 34    expLineal -> operacion enterNormal
Rule 35    expLineal -> assign enterNormal
Rule 36    expLinealT -> TAB operacion
Rule 37    expLinealT -> TAB assign
Rule 38    expLinealT -> TAB operacion enterTab
Rule 39    expLinealT -> assign enterTab
Rule 40    expNormal -> NUMBER
Rule 41    expNormal -> STRING
Rule 42    expNormal -> boolean
Rule 43    expNormal -> NAME
Rule 44    expWhileA -> WHILE expBooleana POINTS enterTabTab
Rule 45    expWhile -> WHILE expBooleana POINTS enterTab

Terminals, with rules where they appear

BREAK                : 
COMPARISON           : 13 23
CONSTANTES           : 17
DIVIDE               : 11
ELSE                 : 
EQUALS               : 2
EXPONENTE            : 12
LOGICOS              : 14 24
LPAREN               : 6 18 26
MINUS                : 9 16
MODULO               : 15
NAME                 : 2 43
NEWLN                : 19 20 21 22 27 28 29 30 31
NUMBER               : 40
PLUS                 : 8
POINTS               : 44 45
PRINT                : 6
RPAREN               : 6 18 26
STRING               : 7 41
TAB                  : 19 20 21 22 27 27 28 28 29 29 36 37 38
TIMES                : 10
WHILE                : 44 45
error                : 

Nonterminals, with rules where they appear

assign               : 33 35 37 39
boolean              : 25 42
enterNormal          : 20 27 30 34 35
enterTab             : 19 38 39 45
enterTabTab          : 28 44
expBooleana          : 24 24 26 44 45
expLineal            : 4 18
expLinealT           : 
expNormal            : 2 5 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 23 23
expWhile             : 3
expWhileA            : 22
expression           : 1 16
operacion            : 32 34 36 38
statement            : 19 20 21 27 28 29 30 31 0
string               : 6

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhile                       shift and go to state 10
    statement                      shift and go to state 6
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    expNormal                      shift and go to state 11
    boolean                        shift and go to state 16

state 1

    (4) expression -> expLineal .

    $end            reduce using rule 4 (expression -> expLineal .)
    NEWLN           reduce using rule 4 (expression -> expLineal .)
    RPAREN          reduce using rule 4 (expression -> expLineal .)


state 2

    (6) expLineal -> PRINT . LPAREN string RPAREN

    LPAREN          shift and go to state 17


state 3

    (16) expression -> MINUS . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    assign                         shift and go to state 15
    expression                     shift and go to state 18
    operacion                      shift and go to state 7
    boolean                        shift and go to state 16
    expNormal                      shift and go to state 11
    expWhile                       shift and go to state 10

state 4

    (1) statement -> expression .

    $end            reduce using rule 1 (statement -> expression .)
    NEWLN           reduce using rule 1 (statement -> expression .)
    RPAREN          reduce using rule 1 (statement -> expression .)


state 5

    (40) expNormal -> NUMBER .

    NEWLN           reduce using rule 40 (expNormal -> NUMBER .)
    $end            reduce using rule 40 (expNormal -> NUMBER .)
    RPAREN          reduce using rule 40 (expNormal -> NUMBER .)
    PLUS            reduce using rule 40 (expNormal -> NUMBER .)
    MINUS           reduce using rule 40 (expNormal -> NUMBER .)
    TIMES           reduce using rule 40 (expNormal -> NUMBER .)
    DIVIDE          reduce using rule 40 (expNormal -> NUMBER .)
    EXPONENTE       reduce using rule 40 (expNormal -> NUMBER .)
    COMPARISON      reduce using rule 40 (expNormal -> NUMBER .)
    LOGICOS         reduce using rule 40 (expNormal -> NUMBER .)
    MODULO          reduce using rule 40 (expNormal -> NUMBER .)
    POINTS          reduce using rule 40 (expNormal -> NUMBER .)


state 6

    (0) S' -> statement .



state 7

    (32) expLineal -> operacion .
    (34) expLineal -> operacion . enterNormal
    (30) enterNormal -> . NEWLN statement enterNormal
    (31) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 32 (expLineal -> operacion .)
    RPAREN          reduce using rule 32 (expLineal -> operacion .)
    NEWLN           shift and go to state 20

  ! NEWLN           [ reduce using rule 32 (expLineal -> operacion .) ]

    enterNormal                    shift and go to state 19

state 8

    (41) expNormal -> STRING .

    NEWLN           reduce using rule 41 (expNormal -> STRING .)
    $end            reduce using rule 41 (expNormal -> STRING .)
    RPAREN          reduce using rule 41 (expNormal -> STRING .)
    PLUS            reduce using rule 41 (expNormal -> STRING .)
    MINUS           reduce using rule 41 (expNormal -> STRING .)
    TIMES           reduce using rule 41 (expNormal -> STRING .)
    DIVIDE          reduce using rule 41 (expNormal -> STRING .)
    EXPONENTE       reduce using rule 41 (expNormal -> STRING .)
    COMPARISON      reduce using rule 41 (expNormal -> STRING .)
    LOGICOS         reduce using rule 41 (expNormal -> STRING .)
    MODULO          reduce using rule 41 (expNormal -> STRING .)
    POINTS          reduce using rule 41 (expNormal -> STRING .)


state 9

    (45) expWhile -> WHILE . expBooleana POINTS enterTab
    (23) expBooleana -> . expNormal COMPARISON expNormal
    (24) expBooleana -> . expBooleana LOGICOS expBooleana
    (25) expBooleana -> . boolean
    (26) expBooleana -> . LPAREN expBooleana RPAREN
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    expNormal                      shift and go to state 23
    boolean                        shift and go to state 25
    expBooleana                    shift and go to state 22

state 10

    (3) expression -> expWhile .

    $end            reduce using rule 3 (expression -> expWhile .)
    NEWLN           reduce using rule 3 (expression -> expWhile .)
    RPAREN          reduce using rule 3 (expression -> expWhile .)


state 11

    (5) expression -> expNormal .
    (8) operacion -> expNormal . PLUS expNormal
    (9) operacion -> expNormal . MINUS expNormal
    (10) operacion -> expNormal . TIMES expNormal
    (11) operacion -> expNormal . DIVIDE expNormal
    (12) operacion -> expNormal . EXPONENTE expNormal
    (13) operacion -> expNormal . COMPARISON expNormal
    (14) operacion -> expNormal . LOGICOS expNormal
    (15) operacion -> expNormal . MODULO expNormal

    $end            reduce using rule 5 (expression -> expNormal .)
    NEWLN           reduce using rule 5 (expression -> expNormal .)
    RPAREN          reduce using rule 5 (expression -> expNormal .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 27
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 33
    EXPONENTE       shift and go to state 26
    COMPARISON      shift and go to state 32
    LOGICOS         shift and go to state 31
    MODULO          shift and go to state 29


state 12

    (43) expNormal -> NAME .
    (2) assign -> NAME . EQUALS expNormal

    PLUS            reduce using rule 43 (expNormal -> NAME .)
    MINUS           reduce using rule 43 (expNormal -> NAME .)
    TIMES           reduce using rule 43 (expNormal -> NAME .)
    DIVIDE          reduce using rule 43 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 43 (expNormal -> NAME .)
    COMPARISON      reduce using rule 43 (expNormal -> NAME .)
    LOGICOS         reduce using rule 43 (expNormal -> NAME .)
    MODULO          reduce using rule 43 (expNormal -> NAME .)
    $end            reduce using rule 43 (expNormal -> NAME .)
    NEWLN           reduce using rule 43 (expNormal -> NAME .)
    RPAREN          reduce using rule 43 (expNormal -> NAME .)
    EQUALS          shift and go to state 34


state 13

    (17) boolean -> CONSTANTES .

    NEWLN           reduce using rule 17 (boolean -> CONSTANTES .)
    $end            reduce using rule 17 (boolean -> CONSTANTES .)
    RPAREN          reduce using rule 17 (boolean -> CONSTANTES .)
    PLUS            reduce using rule 17 (boolean -> CONSTANTES .)
    MINUS           reduce using rule 17 (boolean -> CONSTANTES .)
    TIMES           reduce using rule 17 (boolean -> CONSTANTES .)
    DIVIDE          reduce using rule 17 (boolean -> CONSTANTES .)
    EXPONENTE       reduce using rule 17 (boolean -> CONSTANTES .)
    COMPARISON      reduce using rule 17 (boolean -> CONSTANTES .)
    LOGICOS         reduce using rule 17 (boolean -> CONSTANTES .)
    MODULO          reduce using rule 17 (boolean -> CONSTANTES .)
    POINTS          reduce using rule 17 (boolean -> CONSTANTES .)


state 14

    (18) expLineal -> LPAREN . expLineal RPAREN
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NAME            shift and go to state 37
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 35
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    boolean                        shift and go to state 16
    expNormal                      shift and go to state 36

state 15

    (33) expLineal -> assign .
    (35) expLineal -> assign . enterNormal
    (30) enterNormal -> . NEWLN statement enterNormal
    (31) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 33 (expLineal -> assign .)
    RPAREN          reduce using rule 33 (expLineal -> assign .)
    NEWLN           shift and go to state 20

  ! NEWLN           [ reduce using rule 33 (expLineal -> assign .) ]

    enterNormal                    shift and go to state 38

state 16

    (42) expNormal -> boolean .

    NEWLN           reduce using rule 42 (expNormal -> boolean .)
    $end            reduce using rule 42 (expNormal -> boolean .)
    RPAREN          reduce using rule 42 (expNormal -> boolean .)
    PLUS            reduce using rule 42 (expNormal -> boolean .)
    MINUS           reduce using rule 42 (expNormal -> boolean .)
    TIMES           reduce using rule 42 (expNormal -> boolean .)
    DIVIDE          reduce using rule 42 (expNormal -> boolean .)
    EXPONENTE       reduce using rule 42 (expNormal -> boolean .)
    COMPARISON      reduce using rule 42 (expNormal -> boolean .)
    LOGICOS         reduce using rule 42 (expNormal -> boolean .)
    MODULO          reduce using rule 42 (expNormal -> boolean .)
    POINTS          reduce using rule 42 (expNormal -> boolean .)


state 17

    (6) expLineal -> PRINT LPAREN . string RPAREN
    (7) string -> . STRING

    STRING          shift and go to state 39

    string                         shift and go to state 40

state 18

    (16) expression -> MINUS expression .

    $end            reduce using rule 16 (expression -> MINUS expression .)
    NEWLN           reduce using rule 16 (expression -> MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> MINUS expression .)


state 19

    (34) expLineal -> operacion enterNormal .

    $end            reduce using rule 34 (expLineal -> operacion enterNormal .)
    NEWLN           reduce using rule 34 (expLineal -> operacion enterNormal .)
    RPAREN          reduce using rule 34 (expLineal -> operacion enterNormal .)


state 20

    (30) enterNormal -> NEWLN . statement enterNormal
    (31) enterNormal -> NEWLN . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhile                       shift and go to state 10
    statement                      shift and go to state 41
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    expNormal                      shift and go to state 11
    boolean                        shift and go to state 16

state 21

    (43) expNormal -> NAME .

    NEWLN           reduce using rule 43 (expNormal -> NAME .)
    $end            reduce using rule 43 (expNormal -> NAME .)
    RPAREN          reduce using rule 43 (expNormal -> NAME .)
    COMPARISON      reduce using rule 43 (expNormal -> NAME .)
    POINTS          reduce using rule 43 (expNormal -> NAME .)
    LOGICOS         reduce using rule 43 (expNormal -> NAME .)


state 22

    (45) expWhile -> WHILE expBooleana . POINTS enterTab
    (24) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 43
    LOGICOS         shift and go to state 42


state 23

    (23) expBooleana -> expNormal . COMPARISON expNormal

    COMPARISON      shift and go to state 44


state 24

    (26) expBooleana -> LPAREN . expBooleana RPAREN
    (23) expBooleana -> . expNormal COMPARISON expNormal
    (24) expBooleana -> . expBooleana LOGICOS expBooleana
    (25) expBooleana -> . boolean
    (26) expBooleana -> . LPAREN expBooleana RPAREN
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    expNormal                      shift and go to state 23
    boolean                        shift and go to state 25
    expBooleana                    shift and go to state 45

state 25

    (25) expBooleana -> boolean .
    (42) expNormal -> boolean .

    LOGICOS         reduce using rule 25 (expBooleana -> boolean .)
    POINTS          reduce using rule 25 (expBooleana -> boolean .)
    RPAREN          reduce using rule 25 (expBooleana -> boolean .)
    COMPARISON      reduce using rule 42 (expNormal -> boolean .)


state 26

    (12) operacion -> expNormal EXPONENTE . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 46

state 27

    (9) operacion -> expNormal MINUS . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 47

state 28

    (8) operacion -> expNormal PLUS . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 48

state 29

    (15) operacion -> expNormal MODULO . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 49

state 30

    (10) operacion -> expNormal TIMES . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 50

state 31

    (14) operacion -> expNormal LOGICOS . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 51

state 32

    (13) operacion -> expNormal COMPARISON . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 52

state 33

    (11) operacion -> expNormal DIVIDE . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 53

state 34

    (2) assign -> NAME EQUALS . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 54

state 35

    (18) expLineal -> LPAREN expLineal . RPAREN

    RPAREN          shift and go to state 55


state 36

    (8) operacion -> expNormal . PLUS expNormal
    (9) operacion -> expNormal . MINUS expNormal
    (10) operacion -> expNormal . TIMES expNormal
    (11) operacion -> expNormal . DIVIDE expNormal
    (12) operacion -> expNormal . EXPONENTE expNormal
    (13) operacion -> expNormal . COMPARISON expNormal
    (14) operacion -> expNormal . LOGICOS expNormal
    (15) operacion -> expNormal . MODULO expNormal

    PLUS            shift and go to state 28
    MINUS           shift and go to state 27
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 33
    EXPONENTE       shift and go to state 26
    COMPARISON      shift and go to state 32
    LOGICOS         shift and go to state 31
    MODULO          shift and go to state 29


state 37

    (2) assign -> NAME . EQUALS expNormal
    (43) expNormal -> NAME .

    EQUALS          shift and go to state 34
    PLUS            reduce using rule 43 (expNormal -> NAME .)
    MINUS           reduce using rule 43 (expNormal -> NAME .)
    TIMES           reduce using rule 43 (expNormal -> NAME .)
    DIVIDE          reduce using rule 43 (expNormal -> NAME .)
    EXPONENTE       reduce using rule 43 (expNormal -> NAME .)
    COMPARISON      reduce using rule 43 (expNormal -> NAME .)
    LOGICOS         reduce using rule 43 (expNormal -> NAME .)
    MODULO          reduce using rule 43 (expNormal -> NAME .)


state 38

    (35) expLineal -> assign enterNormal .

    $end            reduce using rule 35 (expLineal -> assign enterNormal .)
    NEWLN           reduce using rule 35 (expLineal -> assign enterNormal .)
    RPAREN          reduce using rule 35 (expLineal -> assign enterNormal .)


state 39

    (7) string -> STRING .

    RPAREN          reduce using rule 7 (string -> STRING .)


state 40

    (6) expLineal -> PRINT LPAREN string . RPAREN

    RPAREN          shift and go to state 56


state 41

    (30) enterNormal -> NEWLN statement . enterNormal
    (31) enterNormal -> NEWLN statement .
    (30) enterNormal -> . NEWLN statement enterNormal
    (31) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 31 (enterNormal -> NEWLN statement .)
    RPAREN          reduce using rule 31 (enterNormal -> NEWLN statement .)
    NEWLN           shift and go to state 20

  ! NEWLN           [ reduce using rule 31 (enterNormal -> NEWLN statement .) ]

    enterNormal                    shift and go to state 57

state 42

    (24) expBooleana -> expBooleana LOGICOS . expBooleana
    (23) expBooleana -> . expNormal COMPARISON expNormal
    (24) expBooleana -> . expBooleana LOGICOS expBooleana
    (25) expBooleana -> . boolean
    (26) expBooleana -> . LPAREN expBooleana RPAREN
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    expNormal                      shift and go to state 23
    boolean                        shift and go to state 25
    expBooleana                    shift and go to state 58

state 43

    (45) expWhile -> WHILE expBooleana POINTS . enterTab
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA

    NEWLN           shift and go to state 60

    enterTab                       shift and go to state 59

state 44

    (23) expBooleana -> expNormal COMPARISON . expNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    boolean                        shift and go to state 16
    expNormal                      shift and go to state 61

state 45

    (26) expBooleana -> LPAREN expBooleana . RPAREN
    (24) expBooleana -> expBooleana . LOGICOS expBooleana

    RPAREN          shift and go to state 62
    LOGICOS         shift and go to state 42


state 46

    (12) operacion -> expNormal EXPONENTE expNormal .

    NEWLN           reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)
    RPAREN          reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)
    $end            reduce using rule 12 (operacion -> expNormal EXPONENTE expNormal .)


state 47

    (9) operacion -> expNormal MINUS expNormal .

    NEWLN           reduce using rule 9 (operacion -> expNormal MINUS expNormal .)
    RPAREN          reduce using rule 9 (operacion -> expNormal MINUS expNormal .)
    $end            reduce using rule 9 (operacion -> expNormal MINUS expNormal .)


state 48

    (8) operacion -> expNormal PLUS expNormal .

    NEWLN           reduce using rule 8 (operacion -> expNormal PLUS expNormal .)
    RPAREN          reduce using rule 8 (operacion -> expNormal PLUS expNormal .)
    $end            reduce using rule 8 (operacion -> expNormal PLUS expNormal .)


state 49

    (15) operacion -> expNormal MODULO expNormal .

    NEWLN           reduce using rule 15 (operacion -> expNormal MODULO expNormal .)
    RPAREN          reduce using rule 15 (operacion -> expNormal MODULO expNormal .)
    $end            reduce using rule 15 (operacion -> expNormal MODULO expNormal .)


state 50

    (10) operacion -> expNormal TIMES expNormal .

    NEWLN           reduce using rule 10 (operacion -> expNormal TIMES expNormal .)
    RPAREN          reduce using rule 10 (operacion -> expNormal TIMES expNormal .)
    $end            reduce using rule 10 (operacion -> expNormal TIMES expNormal .)


state 51

    (14) operacion -> expNormal LOGICOS expNormal .

    NEWLN           reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)
    RPAREN          reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)
    $end            reduce using rule 14 (operacion -> expNormal LOGICOS expNormal .)


state 52

    (13) operacion -> expNormal COMPARISON expNormal .

    NEWLN           reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)
    $end            reduce using rule 13 (operacion -> expNormal COMPARISON expNormal .)


state 53

    (11) operacion -> expNormal DIVIDE expNormal .

    NEWLN           reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)
    RPAREN          reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)
    $end            reduce using rule 11 (operacion -> expNormal DIVIDE expNormal .)


state 54

    (2) assign -> NAME EQUALS expNormal .

    NEWLN           reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    $end            reduce using rule 2 (assign -> NAME EQUALS expNormal .)
    RPAREN          reduce using rule 2 (assign -> NAME EQUALS expNormal .)


state 55

    (18) expLineal -> LPAREN expLineal RPAREN .

    $end            reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)
    NEWLN           reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)
    RPAREN          reduce using rule 18 (expLineal -> LPAREN expLineal RPAREN .)


state 56

    (6) expLineal -> PRINT LPAREN string RPAREN .

    $end            reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)
    NEWLN           reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)
    RPAREN          reduce using rule 6 (expLineal -> PRINT LPAREN string RPAREN .)


state 57

    (30) enterNormal -> NEWLN statement enterNormal .

    $end            reduce using rule 30 (enterNormal -> NEWLN statement enterNormal .)
    NEWLN           reduce using rule 30 (enterNormal -> NEWLN statement enterNormal .)
    RPAREN          reduce using rule 30 (enterNormal -> NEWLN statement enterNormal .)


state 58

    (24) expBooleana -> expBooleana LOGICOS expBooleana .
    (24) expBooleana -> expBooleana . LOGICOS expBooleana

    LOGICOS         reduce using rule 24 (expBooleana -> expBooleana LOGICOS expBooleana .)
    POINTS          reduce using rule 24 (expBooleana -> expBooleana LOGICOS expBooleana .)
    RPAREN          reduce using rule 24 (expBooleana -> expBooleana LOGICOS expBooleana .)

  ! LOGICOS         [ shift and go to state 42 ]


state 59

    (45) expWhile -> WHILE expBooleana POINTS enterTab .

    $end            reduce using rule 45 (expWhile -> WHILE expBooleana POINTS enterTab .)
    NEWLN           reduce using rule 45 (expWhile -> WHILE expBooleana POINTS enterTab .)
    RPAREN          reduce using rule 45 (expWhile -> WHILE expBooleana POINTS enterTab .)


state 60

    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA

    TAB             shift and go to state 63


state 61

    (23) expBooleana -> expNormal COMPARISON expNormal .

    LOGICOS         reduce using rule 23 (expBooleana -> expNormal COMPARISON expNormal .)
    POINTS          reduce using rule 23 (expBooleana -> expNormal COMPARISON expNormal .)
    RPAREN          reduce using rule 23 (expBooleana -> expNormal COMPARISON expNormal .)


state 62

    (26) expBooleana -> LPAREN expBooleana RPAREN .

    LOGICOS         reduce using rule 26 (expBooleana -> LPAREN expBooleana RPAREN .)
    POINTS          reduce using rule 26 (expBooleana -> LPAREN expBooleana RPAREN .)
    RPAREN          reduce using rule 26 (expBooleana -> LPAREN expBooleana RPAREN .)


state 63

    (19) enterTab -> NEWLN TAB . statement enterTab
    (20) enterTab -> NEWLN TAB . statement enterNormal
    (21) enterTab -> NEWLN TAB . statement
    (22) enterTab -> NEWLN TAB . expWhileA
    (1) statement -> . expression
    (44) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    WHILE           shift and go to state 66
    MINUS           shift and go to state 3
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhileA                      shift and go to state 64
    expWhile                       shift and go to state 10
    expNormal                      shift and go to state 11
    statement                      shift and go to state 65
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    boolean                        shift and go to state 16

state 64

    (22) enterTab -> NEWLN TAB expWhileA .

    $end            reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)
    NEWLN           reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)
    RPAREN          reduce using rule 22 (enterTab -> NEWLN TAB expWhileA .)


state 65

    (19) enterTab -> NEWLN TAB statement . enterTab
    (20) enterTab -> NEWLN TAB statement . enterNormal
    (21) enterTab -> NEWLN TAB statement .
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA
    (30) enterNormal -> . NEWLN statement enterNormal
    (31) enterNormal -> . NEWLN statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 21 (enterTab -> NEWLN TAB statement .)
    RPAREN          reduce using rule 21 (enterTab -> NEWLN TAB statement .)
    NEWLN           shift and go to state 69

  ! NEWLN           [ reduce using rule 21 (enterTab -> NEWLN TAB statement .) ]

    enterNormal                    shift and go to state 67
    enterTab                       shift and go to state 68

state 66

    (44) expWhileA -> WHILE . expBooleana POINTS enterTabTab
    (45) expWhile -> WHILE . expBooleana POINTS enterTab
    (23) expBooleana -> . expNormal COMPARISON expNormal
    (24) expBooleana -> . expBooleana LOGICOS expBooleana
    (25) expBooleana -> . boolean
    (26) expBooleana -> . LPAREN expBooleana RPAREN
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (17) boolean -> . CONSTANTES

    LPAREN          shift and go to state 24
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 21
    CONSTANTES      shift and go to state 13

    expNormal                      shift and go to state 23
    boolean                        shift and go to state 25
    expBooleana                    shift and go to state 70

state 67

    (20) enterTab -> NEWLN TAB statement enterNormal .

    $end            reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)
    NEWLN           reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)
    RPAREN          reduce using rule 20 (enterTab -> NEWLN TAB statement enterNormal .)


state 68

    (19) enterTab -> NEWLN TAB statement enterTab .

    $end            reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)
    NEWLN           reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)
    RPAREN          reduce using rule 19 (enterTab -> NEWLN TAB statement enterTab .)


state 69

    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA
    (30) enterNormal -> NEWLN . statement enterNormal
    (31) enterNormal -> NEWLN . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 63
    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhile                       shift and go to state 10
    statement                      shift and go to state 41
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    expNormal                      shift and go to state 11
    boolean                        shift and go to state 16

state 70

    (44) expWhileA -> WHILE expBooleana . POINTS enterTabTab
    (45) expWhile -> WHILE expBooleana . POINTS enterTab
    (24) expBooleana -> expBooleana . LOGICOS expBooleana

    POINTS          shift and go to state 71
    LOGICOS         shift and go to state 42


state 71

    (44) expWhileA -> WHILE expBooleana POINTS . enterTabTab
    (45) expWhile -> WHILE expBooleana POINTS . enterTab
    (27) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (28) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (29) enterTabTab -> . NEWLN TAB TAB statement
    (19) enterTab -> . NEWLN TAB statement enterTab
    (20) enterTab -> . NEWLN TAB statement enterNormal
    (21) enterTab -> . NEWLN TAB statement
    (22) enterTab -> . NEWLN TAB expWhileA

    NEWLN           shift and go to state 73

    enterTab                       shift and go to state 59
    enterTabTab                    shift and go to state 72

state 72

    (44) expWhileA -> WHILE expBooleana POINTS enterTabTab .

    $end            reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    NEWLN           reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)
    RPAREN          reduce using rule 44 (expWhileA -> WHILE expBooleana POINTS enterTabTab .)


state 73

    (27) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (28) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (29) enterTabTab -> NEWLN . TAB TAB statement
    (19) enterTab -> NEWLN . TAB statement enterTab
    (20) enterTab -> NEWLN . TAB statement enterNormal
    (21) enterTab -> NEWLN . TAB statement
    (22) enterTab -> NEWLN . TAB expWhileA

    TAB             shift and go to state 74


state 74

    (27) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (28) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (29) enterTabTab -> NEWLN TAB . TAB statement
    (19) enterTab -> NEWLN TAB . statement enterTab
    (20) enterTab -> NEWLN TAB . statement enterNormal
    (21) enterTab -> NEWLN TAB . statement
    (22) enterTab -> NEWLN TAB . expWhileA
    (1) statement -> . expression
    (44) expWhileA -> . WHILE expBooleana POINTS enterTabTab
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 75
    WHILE           shift and go to state 66
    MINUS           shift and go to state 3
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhileA                      shift and go to state 64
    expWhile                       shift and go to state 10
    expNormal                      shift and go to state 11
    statement                      shift and go to state 65
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    boolean                        shift and go to state 16

state 75

    (27) enterTabTab -> NEWLN TAB TAB . statement enterNormal
    (28) enterTabTab -> NEWLN TAB TAB . statement enterTabTab
    (29) enterTabTab -> NEWLN TAB TAB . statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhile                       shift and go to state 10
    statement                      shift and go to state 76
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    expNormal                      shift and go to state 11
    boolean                        shift and go to state 16

state 76

    (27) enterTabTab -> NEWLN TAB TAB statement . enterNormal
    (28) enterTabTab -> NEWLN TAB TAB statement . enterTabTab
    (29) enterTabTab -> NEWLN TAB TAB statement .
    (30) enterNormal -> . NEWLN statement enterNormal
    (31) enterNormal -> . NEWLN statement
    (27) enterTabTab -> . NEWLN TAB TAB statement enterNormal
    (28) enterTabTab -> . NEWLN TAB TAB statement enterTabTab
    (29) enterTabTab -> . NEWLN TAB TAB statement

  ! shift/reduce conflict for NEWLN resolved as shift
    $end            reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement .)
    RPAREN          reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement .)
    NEWLN           shift and go to state 79

  ! NEWLN           [ reduce using rule 29 (enterTabTab -> NEWLN TAB TAB statement .) ]

    enterNormal                    shift and go to state 77
    enterTabTab                    shift and go to state 78

state 77

    (27) enterTabTab -> NEWLN TAB TAB statement enterNormal .

    $end            reduce using rule 27 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    NEWLN           reduce using rule 27 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)
    RPAREN          reduce using rule 27 (enterTabTab -> NEWLN TAB TAB statement enterNormal .)


state 78

    (28) enterTabTab -> NEWLN TAB TAB statement enterTabTab .

    $end            reduce using rule 28 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    NEWLN           reduce using rule 28 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)
    RPAREN          reduce using rule 28 (enterTabTab -> NEWLN TAB TAB statement enterTabTab .)


state 79

    (30) enterNormal -> NEWLN . statement enterNormal
    (31) enterNormal -> NEWLN . statement
    (27) enterTabTab -> NEWLN . TAB TAB statement enterNormal
    (28) enterTabTab -> NEWLN . TAB TAB statement enterTabTab
    (29) enterTabTab -> NEWLN . TAB TAB statement
    (1) statement -> . expression
    (3) expression -> . expWhile
    (4) expression -> . expLineal
    (5) expression -> . expNormal
    (16) expression -> . MINUS expression
    (45) expWhile -> . WHILE expBooleana POINTS enterTab
    (6) expLineal -> . PRINT LPAREN string RPAREN
    (18) expLineal -> . LPAREN expLineal RPAREN
    (32) expLineal -> . operacion
    (33) expLineal -> . assign
    (34) expLineal -> . operacion enterNormal
    (35) expLineal -> . assign enterNormal
    (40) expNormal -> . NUMBER
    (41) expNormal -> . STRING
    (42) expNormal -> . boolean
    (43) expNormal -> . NAME
    (8) operacion -> . expNormal PLUS expNormal
    (9) operacion -> . expNormal MINUS expNormal
    (10) operacion -> . expNormal TIMES expNormal
    (11) operacion -> . expNormal DIVIDE expNormal
    (12) operacion -> . expNormal EXPONENTE expNormal
    (13) operacion -> . expNormal COMPARISON expNormal
    (14) operacion -> . expNormal LOGICOS expNormal
    (15) operacion -> . expNormal MODULO expNormal
    (2) assign -> . NAME EQUALS expNormal
    (17) boolean -> . CONSTANTES

    TAB             shift and go to state 80
    MINUS           shift and go to state 3
    WHILE           shift and go to state 9
    PRINT           shift and go to state 2
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 5
    STRING          shift and go to state 8
    NAME            shift and go to state 12
    CONSTANTES      shift and go to state 13

    expLineal                      shift and go to state 1
    expression                     shift and go to state 4
    expWhile                       shift and go to state 10
    statement                      shift and go to state 41
    operacion                      shift and go to state 7
    assign                         shift and go to state 15
    expNormal                      shift and go to state 11
    boolean                        shift and go to state 16

state 80

    (27) enterTabTab -> NEWLN TAB . TAB statement enterNormal
    (28) enterTabTab -> NEWLN TAB . TAB statement enterTabTab
    (29) enterTabTab -> NEWLN TAB . TAB statement

    TAB             shift and go to state 75

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLN in state 7 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 15 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 41 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLN in state 76 resolved as shift
