
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCOMPARISONleftLOGICOSleftMODULOleftEXPONENTErightUMINUSCONSTANTES NAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN WHILE EXPONENTE COMPARISON POINTS LOGICOS MODULO PRINT STRING BREAK ELSE NEWLN TABstatement : expressionassign : NAME EQUALS expNormalexpression : expWhile\n                  | expLineal\n                  | expNormalexpLineal : PRINT LPAREN string RPARENstring : STRINGoperacion : expNormal PLUS expNormal\n                 | expNormal MINUS expNormal\n                 | expNormal TIMES expNormal\n                 | expNormal DIVIDE expNormal\n                 | expNormal EXPONENTE expNormal\n                 | expNormal COMPARISON expNormal\n                 | expNormal LOGICOS expNormal\n                 | expNormal MODULO expNormalexpression : MINUS expression %prec UMINUSboolean : CONSTANTESexpLineal : LPAREN expLineal RPARENenterTab : NEWLN TAB statement enterTab\n                | NEWLN TAB statement enterNormal\n                | NEWLN TAB statement\n                | NEWLN TAB expWhileA\n                | NEWLN TAB expWhileA ELSE POINTS enterTab\n                | NEWLN TAB BREAKexpBooleana : expNormal COMPARISON expNormal\n                   | expBooleana LOGICOS expBooleana\n                   | booleanexpBooleana : LPAREN expBooleana RPARENenterTabTab : NEWLN TAB TAB statement enterNormal\n                   | NEWLN TAB TAB statement enterTabTab\n                   | NEWLN TAB TAB statement\n                   | NEWLN TAB TAB BREAKenterNormal : NEWLN statement enterNormal\n                   | NEWLN statementexpLineal : operacion\n                 | assign\n                 | operacion enterNormal\n                 | assign enterNormalexpNormal : NUMBER\n                 | STRING\n                 | booleanexpNormal : NAMEexpWhileA : WHILE expBooleana POINTS enterTabTab\n                 | WHILE expBooleana POINTS expLineal\n                 | WHILE NAME POINTS enterTabTab\n                 | WHILE NAME POINTS expLinealexpWhile : WHILE expBooleana POINTS enterTab\n                | WHILE expBooleana POINTS expLineal\n                | WHILE NAME POINTS enterTab\n                | WHILE NAME POINTS expLineal'
    
_lr_action_items = {'PRINT':([0,9,10,17,54,57,68,76,80,81,88,89,94,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TAB':([61,76,83,88,94,95,],[68,68,88,89,95,89,]),'DIVIDE':([4,5,6,8,15,16,29,31,],[-41,24,-39,-42,-17,-40,-42,24,]),'NUMBER':([0,9,10,13,17,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ELSE':([1,2,4,5,6,8,11,12,14,15,16,18,32,38,39,42,43,44,45,46,47,48,49,50,51,52,58,59,62,63,66,67,69,70,71,74,75,82,84,85,86,87,90,91,92,93,],[-3,-36,-41,-5,-39,-42,-1,-4,-35,-17,-40,-38,-16,-37,-34,-42,-8,-15,-13,-14,-11,-9,-12,-10,-2,-18,-33,-6,-50,-49,-48,-47,73,-21,-24,-19,-20,-23,-45,-46,-43,-44,-31,-32,-29,-30,]),'NEWLN':([1,2,4,5,6,8,11,12,14,15,16,18,32,38,39,42,43,44,45,46,47,48,49,50,51,52,54,57,58,59,62,63,66,67,69,70,71,74,75,79,80,81,82,84,85,86,87,90,91,92,93,],[-3,17,-41,-5,-39,-42,-1,-4,17,-17,-40,-38,-16,-37,17,-42,-8,-15,-13,-14,-11,-9,-12,-10,-2,-18,61,61,-33,-6,-50,-49,-48,-47,-22,76,-24,-19,-20,61,83,83,-23,-45,-46,-43,-44,94,-32,-29,-30,]),'NAME':([0,9,10,13,17,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[8,29,8,35,8,42,42,42,42,42,42,42,42,42,42,42,29,42,29,8,77,8,29,29,8,8,8,]),'LPAREN':([0,3,9,10,13,17,36,54,56,57,68,72,76,80,81,88,89,94,],[9,19,9,9,36,9,36,9,36,9,9,36,9,9,9,9,9,9,]),'CONSTANTES':([0,9,10,13,17,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'PLUS':([4,5,6,8,15,16,29,31,],[-41,20,-39,-42,-17,-40,-42,20,]),'EQUALS':([8,29,],[28,28,]),'RPAREN':([1,2,4,5,6,8,11,12,14,15,16,18,30,32,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,58,59,60,62,63,64,65,66,67,69,70,71,74,75,82,84,85,86,87,90,91,92,93,],[-3,-36,-41,-5,-39,-42,-1,-4,-35,-17,-40,-38,52,-16,-27,-37,-34,-7,59,-42,-8,-15,-13,-14,-11,-9,-12,-10,-2,-18,64,-33,-6,-25,-50,-49,-28,-26,-48,-47,-22,-21,-24,-19,-20,-23,-45,-46,-43,-44,-31,-32,-29,-30,]),'EXPONENTE':([4,5,6,8,15,16,29,31,],[-41,26,-39,-42,-17,-40,-42,26,]),'STRING':([0,9,10,13,17,19,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[16,16,16,16,16,40,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'MINUS':([0,4,5,6,8,10,15,16,17,29,31,68,76,88,89,94,],[10,-41,25,-39,-42,10,-17,-40,10,-42,25,10,10,10,10,10,]),'BREAK':([68,88,89,],[71,71,91,]),'$end':([1,2,4,5,6,7,8,11,12,14,15,16,18,32,38,39,42,43,44,45,46,47,48,49,50,51,52,58,59,62,63,66,67,69,70,71,74,75,82,84,85,86,87,90,91,92,93,],[-3,-36,-41,-5,-39,0,-42,-1,-4,-35,-17,-40,-38,-16,-37,-34,-42,-8,-15,-13,-14,-11,-9,-12,-10,-2,-18,-33,-6,-50,-49,-48,-47,-22,-21,-24,-19,-20,-23,-45,-46,-43,-44,-31,-32,-29,-30,]),'COMPARISON':([4,5,6,8,15,16,29,31,33,34,35,42,77,],[-41,22,-39,-42,-17,-40,-42,22,-41,53,-42,-42,-42,]),'LOGICOS':([4,5,6,8,15,16,29,31,33,37,42,55,60,64,65,78,],[-41,23,-39,-42,-17,-40,-42,23,-27,56,-42,56,-25,-28,-26,56,]),'WHILE':([0,10,17,68,76,88,89,94,],[13,13,13,72,13,72,13,13,]),'MODULO':([4,5,6,8,15,16,29,31,],[-41,21,-39,-42,-17,-40,-42,21,]),'POINTS':([4,6,15,16,33,35,37,42,60,64,65,73,77,78,],[-41,-39,-17,-40,-27,54,57,-42,-25,-28,-26,79,80,81,]),'TIMES':([4,5,6,8,15,16,29,31,],[-41,27,-39,-42,-17,-40,-42,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expWhile':([0,10,17,68,76,88,89,94,],[1,1,1,1,1,1,1,1,]),'assign':([0,9,10,17,54,57,68,76,80,81,88,89,94,],[2,2,2,2,2,2,2,2,2,2,2,2,2,]),'enterNormal':([2,14,39,70,90,],[18,38,58,75,92,]),'expNormal':([0,9,10,13,17,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[5,31,5,34,5,43,44,45,46,47,48,49,50,51,34,60,31,34,31,5,34,5,31,31,5,5,5,]),'boolean':([0,9,10,13,17,20,21,22,23,24,25,26,27,28,36,53,54,56,57,68,72,76,80,81,88,89,94,],[4,4,4,33,4,4,4,4,4,4,4,4,4,4,33,4,4,33,4,4,33,4,4,4,4,4,4,]),'expression':([0,10,17,68,76,88,89,94,],[11,32,11,11,11,11,11,11,]),'expWhileA':([68,88,],[69,69,]),'expLineal':([0,9,10,17,54,57,68,76,80,81,88,89,94,],[12,30,12,12,62,66,12,12,85,87,12,12,12,]),'statement':([0,17,68,76,88,89,94,],[7,39,70,39,70,90,39,]),'enterTab':([54,57,70,79,80,81,],[63,67,74,82,63,67,]),'string':([19,],[41,]),'operacion':([0,9,10,17,54,57,68,76,80,81,88,89,94,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'enterTabTab':([80,81,90,],[84,86,93,]),'expBooleana':([13,36,56,72,],[37,55,65,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','libreriaCompilador.py',75),
  ('assign -> NAME EQUALS expNormal','assign',3,'p_statement_assign','libreriaCompilador.py',81),
  ('expression -> expWhile','expression',1,'p_statement_expresion','libreriaCompilador.py',87),
  ('expression -> expLineal','expression',1,'p_statement_expresion','libreriaCompilador.py',88),
  ('expression -> expNormal','expression',1,'p_statement_expresion','libreriaCompilador.py',89),
  ('expLineal -> PRINT LPAREN string RPAREN','expLineal',4,'p_statement_print','libreriaCompilador.py',94),
  ('string -> STRING','string',1,'p_statement_string','libreriaCompilador.py',99),
  ('operacion -> expNormal PLUS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',104),
  ('operacion -> expNormal MINUS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',105),
  ('operacion -> expNormal TIMES expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',106),
  ('operacion -> expNormal DIVIDE expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',107),
  ('operacion -> expNormal EXPONENTE expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',108),
  ('operacion -> expNormal COMPARISON expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',109),
  ('operacion -> expNormal LOGICOS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',110),
  ('operacion -> expNormal MODULO expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',111),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','libreriaCompilador.py',128),
  ('boolean -> CONSTANTES','boolean',1,'p_expression_constant','libreriaCompilador.py',133),
  ('expLineal -> LPAREN expLineal RPAREN','expLineal',3,'p_expression_group','libreriaCompilador.py',140),
  ('enterTab -> NEWLN TAB statement enterTab','enterTab',4,'p_expression_enter_tab','libreriaCompilador.py',146),
  ('enterTab -> NEWLN TAB statement enterNormal','enterTab',4,'p_expression_enter_tab','libreriaCompilador.py',147),
  ('enterTab -> NEWLN TAB statement','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',148),
  ('enterTab -> NEWLN TAB expWhileA','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',149),
  ('enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTab','enterTab',6,'p_expression_enter_tab','libreriaCompilador.py',150),
  ('enterTab -> NEWLN TAB BREAK','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',151),
  ('expBooleana -> expNormal COMPARISON expNormal','expBooleana',3,'p_expression_booleana','libreriaCompilador.py',160),
  ('expBooleana -> expBooleana LOGICOS expBooleana','expBooleana',3,'p_expression_booleana','libreriaCompilador.py',161),
  ('expBooleana -> boolean','expBooleana',1,'p_expression_booleana','libreriaCompilador.py',162),
  ('expBooleana -> LPAREN expBooleana RPAREN','expBooleana',3,'p_expression_booleana_par','libreriaCompilador.py',166),
  ('enterTabTab -> NEWLN TAB TAB statement enterNormal','enterTabTab',5,'p_expression_enter_tab_tab','libreriaCompilador.py',170),
  ('enterTabTab -> NEWLN TAB TAB statement enterTabTab','enterTabTab',5,'p_expression_enter_tab_tab','libreriaCompilador.py',171),
  ('enterTabTab -> NEWLN TAB TAB statement','enterTabTab',4,'p_expression_enter_tab_tab','libreriaCompilador.py',172),
  ('enterTabTab -> NEWLN TAB TAB BREAK','enterTabTab',4,'p_expression_enter_tab_tab','libreriaCompilador.py',173),
  ('enterNormal -> NEWLN statement enterNormal','enterNormal',3,'p_expression_enter_normal','libreriaCompilador.py',177),
  ('enterNormal -> NEWLN statement','enterNormal',2,'p_expression_enter_normal','libreriaCompilador.py',178),
  ('expLineal -> operacion','expLineal',1,'p_expression_lineal','libreriaCompilador.py',182),
  ('expLineal -> assign','expLineal',1,'p_expression_lineal','libreriaCompilador.py',183),
  ('expLineal -> operacion enterNormal','expLineal',2,'p_expression_lineal','libreriaCompilador.py',184),
  ('expLineal -> assign enterNormal','expLineal',2,'p_expression_lineal','libreriaCompilador.py',185),
  ('expNormal -> NUMBER','expNormal',1,'p_expression_normal','libreriaCompilador.py',189),
  ('expNormal -> STRING','expNormal',1,'p_expression_normal','libreriaCompilador.py',190),
  ('expNormal -> boolean','expNormal',1,'p_expression_normal','libreriaCompilador.py',191),
  ('expNormal -> NAME','expNormal',1,'p_expression_name','libreriaCompilador.py',195),
  ('expWhileA -> WHILE expBooleana POINTS enterTabTab','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',203),
  ('expWhileA -> WHILE expBooleana POINTS expLineal','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',204),
  ('expWhileA -> WHILE NAME POINTS enterTabTab','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',205),
  ('expWhileA -> WHILE NAME POINTS expLineal','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',206),
  ('expWhile -> WHILE expBooleana POINTS enterTab','expWhile',4,'p_expression_while','libreriaCompilador.py',209),
  ('expWhile -> WHILE expBooleana POINTS expLineal','expWhile',4,'p_expression_while','libreriaCompilador.py',210),
  ('expWhile -> WHILE NAME POINTS enterTab','expWhile',4,'p_expression_while','libreriaCompilador.py',211),
  ('expWhile -> WHILE NAME POINTS expLineal','expWhile',4,'p_expression_while','libreriaCompilador.py',212),
]
