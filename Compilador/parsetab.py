
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCOMPARISONleftLOGICOSleftMODULOleftEXPONENTErightUMINUSCONSTANTES NAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN WHILE EXPONENTE COMPARISON POINTS LOGICOS MODULOstatement : NAME EQUALS expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENTE expression\n                  | expression COMPARISON expression\n                  | expression LOGICOS expression\n                  | expression MODULO expressionexpression : MINUS expression %prec UMINUSexpression : CONSTANTESexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEstatement : WHILE expression POINTS expression\n                 | WHILE expression POINTS statement'
    
_lr_action_items = {'CONSTANTES':([0,3,4,5,13,14,15,16,17,18,19,20,21,23,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'TIMES':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,17,-14,-15,17,-15,17,-11,-13,-7,-9,17,-10,-5,17,-8,-6,17,-15,17,]),'LPAREN':([0,3,4,5,13,14,15,16,17,18,19,20,21,23,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'EQUALS':([8,33,],[21,21,]),'PLUS':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,15,-14,-15,15,-15,15,-11,-13,-7,-9,-3,-10,-5,-4,-8,-6,15,-15,15,]),'WHILE':([0,23,],[4,4,]),'$end':([1,2,6,7,8,10,12,22,24,25,26,27,28,29,30,31,32,33,34,35,],[-12,0,-2,-14,-15,-15,-11,-13,-7,-9,-3,-10,-5,-4,-8,-6,-1,-15,-2,-17,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[5,-12,5,5,5,18,-14,-15,18,-15,18,-11,5,5,5,5,5,5,5,5,5,-13,5,-7,-9,-3,-10,-5,-4,-8,-6,18,-15,18,]),'POINTS':([1,7,10,11,12,22,24,25,26,27,28,29,30,31,],[-12,-14,-15,23,-11,-13,-7,-9,-3,-10,-5,-4,-8,-6,]),'LOGICOS':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,14,-14,-15,14,-15,14,-11,-13,-7,-9,14,-10,14,14,14,14,14,-15,14,]),'COMPARISON':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,19,-14,-15,19,-15,19,-11,-13,-7,-9,19,-10,19,19,-8,19,19,-15,19,]),'NUMBER':([0,3,4,5,13,14,15,16,17,18,19,20,21,23,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'RPAREN':([1,7,9,10,12,22,24,25,26,27,28,29,30,31,],[-12,-14,22,-15,-11,-13,-7,-9,-3,-10,-5,-4,-8,-6,]),'NAME':([0,3,4,5,13,14,15,16,17,18,19,20,21,23,],[8,10,10,10,10,10,10,10,10,10,10,10,10,33,]),'EXPONENTE':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,13,-14,-15,13,-15,13,-11,-13,-7,13,13,13,13,13,13,13,13,-15,13,]),'MODULO':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,16,-14,-15,16,-15,16,-11,-13,-7,16,16,-10,16,16,16,16,16,-15,16,]),'DIVIDE':([1,6,7,8,9,10,11,12,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,20,-14,-15,20,-15,20,-11,-13,-7,-9,20,-10,-5,20,-8,-6,20,-15,20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,5,13,14,15,16,17,18,19,20,21,23,],[6,9,11,12,24,25,26,27,28,29,30,31,32,34,]),'statement':([0,23,],[2,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','pruebaWhile.py',74),
  ('statement -> expression','statement',1,'p_statement_expr','pruebaWhile.py',78),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','pruebaWhile.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','pruebaWhile.py',83),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','pruebaWhile.py',84),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','pruebaWhile.py',85),
  ('expression -> expression EXPONENTE expression','expression',3,'p_expression_binop','pruebaWhile.py',86),
  ('expression -> expression COMPARISON expression','expression',3,'p_expression_binop','pruebaWhile.py',87),
  ('expression -> expression LOGICOS expression','expression',3,'p_expression_binop','pruebaWhile.py',88),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','pruebaWhile.py',89),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','pruebaWhile.py',106),
  ('expression -> CONSTANTES','expression',1,'p_expression_constant','pruebaWhile.py',110),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','pruebaWhile.py',117),
  ('expression -> NUMBER','expression',1,'p_expression_number','pruebaWhile.py',121),
  ('expression -> NAME','expression',1,'p_expression_name','pruebaWhile.py',125),
  ('statement -> WHILE expression POINTS expression','statement',4,'p_expression_while','pruebaWhile.py',133),
  ('statement -> WHILE expression POINTS statement','statement',4,'p_expression_while','pruebaWhile.py',134),
]
