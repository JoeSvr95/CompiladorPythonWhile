
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCOMPARISONleftLOGICOSleftMODULOleftEXPONENTErightUMINUSCONSTANTES NAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN WHILE EXPONENTE COMPARISON POINTS LOGICOS MODULO PRINT STRING BREAK ELSE NEWLN TABstatement : expressionassign : NAME EQUALS expNormal\n              | NAME EQUALS operacionexpression : expWhile\n                  | expLineal\n                  | expNormalexpLineal : PRINT LPAREN expNormal RPAREN\n                 | PRINT LPAREN operacion RPAREN\n                 | PRINT LPAREN expNormal RPAREN enterNormal\n                 | PRINT LPAREN operacion RPAREN enterNormal\n                 | PRINT LPAREN expNormal RPAREN enterTab\n                 | PRINT LPAREN operacion RPAREN enterTab\n                 | PRINT LPAREN expNormal RPAREN enterTabTab\n                 | PRINT LPAREN operacion RPAREN enterTabTabstring : STRINGoperacion : expNormal PLUS expNormal\n                 | expNormal MINUS expNormal\n                 | expNormal TIMES expNormal\n                 | expNormal DIVIDE expNormal\n                 | expNormal EXPONENTE expNormal\n                 | expNormal COMPARISON expNormal\n                 | expNormal LOGICOS expNormal\n                 | expNormal MODULO expNormalexpression : MINUS expression %prec UMINUSboolean : CONSTANTESexpLineal : LPAREN expLineal RPARENenterTab : NEWLN TAB statement enterTab\n                | NEWLN TAB statement enterNormal\n                | NEWLN TAB statement\n                | NEWLN TAB expWhileA\n                | NEWLN TAB expWhileA ELSE POINTS enterTabTab\n                | NEWLN TAB BREAKexpBooleana : expNormal COMPARISON expNormal\n                   | expBooleana LOGICOS expBooleana\n                   | booleanexpBooleana : LPAREN expBooleana RPARENenterTabTab : NEWLN TAB TAB statement enterNormal\n                   | NEWLN TAB TAB statement enterTabTab\n                   | NEWLN TAB TAB statement\n                   | NEWLN TAB TAB BREAKenterNormal : NEWLN statement enterNormal\n                   | NEWLN statement\n                   | NEWLN ELSE POINTS enterTabexpLineal : operacion\n                 | operacion enterNormal\n                 | operacion enterTab\n                 | operacion enterTabTab\n                 | assign\n                 | assign enterTab\n                 | assign enterTabTab\n                 | assign enterNormalexpNormal : NUMBER\n                 | string\n                 | booleanexpNormal : NAMEexpWhileA : WHILE expBooleana POINTS enterTabTab\n                 | WHILE expBooleana POINTS expLineal\n                 | WHILE NAME POINTS enterTabTab\n                 | WHILE NAME POINTS expLinealexpWhile : WHILE expBooleana POINTS enterTab\n                | WHILE expBooleana POINTS expLineal\n                | WHILE NAME POINTS enterTab\n                | WHILE NAME POINTS expLineal\n                | WHILE NAME LPAREN RPAREN POINTS enterTab\n                | WHILE NAME LPAREN RPAREN POINTS expLineal'
    
_lr_action_items = {'$end':([1,2,3,5,7,8,9,10,11,12,13,16,17,24,25,26,35,42,43,44,45,46,47,50,51,54,55,56,57,58,59,60,61,68,69,71,73,74,75,79,80,85,86,87,88,89,90,91,92,93,96,97,100,101,108,109,110,111,112,114,115,117,118,],[-55,-53,-5,-52,-15,-44,-54,0,-1,-4,-6,-48,-25,-46,-47,-45,-24,-49,-50,-51,-55,-2,-3,-26,-42,-17,-19,-18,-20,-16,-21,-23,-22,-8,-7,-41,-30,-29,-32,-63,-62,-61,-60,-12,-14,-10,-11,-13,-9,-43,-27,-28,-39,-40,-38,-37,-65,-64,-31,-58,-59,-56,-57,]),'EQUALS':([1,21,],[18,18,]),'NAME':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[1,21,1,36,45,45,1,45,45,45,45,45,45,45,45,45,1,1,21,45,45,21,1,98,1,1,21,1,21,21,1,1,]),'EXPONENTE':([1,2,5,7,9,13,17,21,22,45,46,49,],[-55,-53,-52,-15,-54,30,-25,-55,30,-55,30,30,]),'CONSTANTES':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'POINTS':([2,5,7,9,17,36,37,40,45,52,78,82,83,84,94,98,99,],[-53,-52,-15,-54,-25,63,-35,67,-55,72,102,-33,-36,-34,104,105,106,]),'MODULO':([1,2,5,7,9,13,17,21,22,45,46,49,],[-55,-53,-52,-15,-54,33,-25,-55,33,-55,33,33,]),'PRINT':([0,6,14,23,41,53,63,67,70,77,95,102,103,105,106,107,120,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NUMBER':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'MINUS':([0,1,2,5,7,9,13,14,17,21,22,23,41,45,46,49,53,70,77,95,103,107,120,],[14,-55,-53,-52,-15,-54,27,14,-25,-55,27,14,14,-55,27,27,14,14,14,14,14,14,14,]),'ELSE':([1,2,3,5,7,8,9,11,12,13,16,17,23,24,25,26,35,41,42,43,44,45,46,47,50,51,54,55,56,57,58,59,60,61,68,69,70,71,73,74,75,79,80,85,86,87,88,89,90,91,92,93,95,96,97,100,101,107,108,109,110,111,112,114,115,117,118,],[-55,-53,-5,-52,-15,-44,-54,-1,-4,-6,-48,-25,52,-46,-47,-45,-24,52,-49,-50,-51,-55,-2,-3,-26,-42,-17,-19,-18,-20,-16,-21,-23,-22,-8,-7,52,-41,94,-29,-32,-63,-62,-61,-60,-12,-14,-10,-11,-13,-9,-43,52,-27,-28,-39,-40,52,-38,-37,-65,-64,-31,-58,-59,-56,-57,]),'DIVIDE':([1,2,5,7,9,13,17,21,22,45,46,49,],[-55,-53,-52,-15,-54,28,-25,-55,28,-55,28,28,]),'BREAK':([53,77,103,120,],[75,101,75,75,]),'NEWLN':([1,2,3,5,7,8,9,11,12,13,16,17,24,25,26,35,42,43,44,45,46,47,50,51,54,55,56,57,58,59,60,61,63,67,68,69,71,72,73,74,75,79,80,85,86,87,88,89,90,91,92,93,96,97,100,101,102,104,105,106,108,109,110,111,112,114,115,117,118,],[-55,-53,-5,-52,-15,23,-54,-1,-4,-6,41,-25,-46,-47,-45,-24,-49,-50,-51,-55,-2,-3,-26,70,-17,-19,-18,-20,-16,-21,-23,-22,81,81,23,23,-41,81,-30,95,-32,-63,-62,-61,-60,-12,-14,-10,-11,-13,-9,-43,-27,-28,107,-40,81,113,116,116,-38,-37,-65,-64,-31,-58,-59,-56,-57,]),'TIMES':([1,2,5,7,9,13,17,21,22,45,46,49,],[-55,-53,-52,-15,-54,29,-25,-55,29,-55,29,29,]),'LOGICOS':([1,2,5,7,9,13,17,21,22,37,40,45,46,49,65,82,83,84,99,],[-55,-53,-52,-15,-54,34,-25,-55,34,-35,66,-55,34,34,66,-33,-36,-34,66,]),'STRING':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'LPAREN':([0,4,6,14,15,23,36,39,41,53,63,66,67,70,76,77,95,98,102,103,105,106,107,120,],[6,19,6,6,39,6,62,39,6,6,6,39,6,6,39,6,6,62,6,6,6,6,6,6,]),'WHILE':([0,14,23,41,53,70,77,95,103,107,120,],[15,15,15,15,76,15,15,15,76,15,76,]),'TAB':([23,41,53,81,95,107,113,116,119,120,],[53,53,77,103,103,119,119,120,77,77,]),'RPAREN':([1,2,3,5,7,8,9,11,12,13,16,17,20,24,25,26,35,37,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,65,68,69,71,73,74,75,79,80,82,83,84,85,86,87,88,89,90,91,92,93,96,97,100,101,108,109,110,111,112,114,115,117,118,],[-55,-53,-5,-52,-15,-44,-54,-1,-4,-6,-48,-25,50,-46,-47,-45,-24,-35,-49,-50,-51,-55,-2,-3,68,69,-26,-42,-17,-19,-18,-20,-16,-21,-23,-22,78,83,-8,-7,-41,-30,-29,-32,-63,-62,-33,-36,-34,-61,-60,-12,-14,-10,-11,-13,-9,-43,-27,-28,-39,-40,-38,-37,-65,-64,-31,-58,-59,-56,-57,]),'PLUS':([1,2,5,7,9,13,17,21,22,45,46,49,],[-55,-53,-52,-15,-54,31,-25,-55,31,-55,31,31,]),'COMPARISON':([1,2,5,7,9,13,17,21,22,36,37,38,45,46,49,98,],[-55,-53,-52,-15,-54,32,-25,-55,32,-55,-54,64,-55,32,32,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'enterTab':([8,16,63,67,68,69,72,74,102,105,106,],[24,42,80,86,87,90,93,96,111,80,86,]),'assign':([0,6,14,23,41,53,63,67,70,77,95,102,103,105,106,107,120,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'string':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'enterTabTab':([8,16,68,69,100,104,105,106,],[25,43,88,91,108,112,114,117,]),'expLineal':([0,6,14,23,41,53,63,67,70,77,95,102,103,105,106,107,120,],[3,20,3,3,3,3,79,85,3,3,3,110,3,115,118,3,3,]),'expWhile':([0,14,23,41,53,70,77,95,103,107,120,],[12,12,12,12,12,12,12,12,12,12,12,]),'expNormal':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[13,22,13,38,46,49,13,54,55,56,57,58,59,60,61,38,13,13,22,82,38,22,13,38,13,13,22,13,22,22,13,13,]),'expression':([0,14,23,41,53,70,77,95,103,107,120,],[11,35,11,11,11,11,11,11,11,11,11,]),'expBooleana':([15,39,66,76,],[40,65,84,99,]),'boolean':([0,6,14,15,18,19,23,27,28,29,30,31,32,33,34,39,41,53,63,64,66,67,70,76,77,95,102,103,105,106,107,120,],[9,9,9,37,9,9,9,9,9,9,9,9,9,9,9,37,9,9,9,9,37,9,9,37,9,9,9,9,9,9,9,9,]),'operacion':([0,6,14,18,19,23,41,53,63,67,70,77,95,102,103,105,106,107,120,],[8,8,8,47,48,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'expWhileA':([53,103,120,],[73,73,73,]),'enterNormal':([8,16,51,68,69,74,100,],[26,44,71,89,92,97,109,]),'statement':([0,23,41,53,70,77,95,103,107,120,],[10,51,51,74,51,100,51,74,51,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','libreriaCompilador.py',75),
  ('assign -> NAME EQUALS expNormal','assign',3,'p_statement_assign','libreriaCompilador.py',81),
  ('assign -> NAME EQUALS operacion','assign',3,'p_statement_assign','libreriaCompilador.py',82),
  ('expression -> expWhile','expression',1,'p_statement_expresion','libreriaCompilador.py',88),
  ('expression -> expLineal','expression',1,'p_statement_expresion','libreriaCompilador.py',89),
  ('expression -> expNormal','expression',1,'p_statement_expresion','libreriaCompilador.py',90),
  ('expLineal -> PRINT LPAREN expNormal RPAREN','expLineal',4,'p_statement_print','libreriaCompilador.py',95),
  ('expLineal -> PRINT LPAREN operacion RPAREN','expLineal',4,'p_statement_print','libreriaCompilador.py',96),
  ('expLineal -> PRINT LPAREN expNormal RPAREN enterNormal','expLineal',5,'p_statement_print','libreriaCompilador.py',97),
  ('expLineal -> PRINT LPAREN operacion RPAREN enterNormal','expLineal',5,'p_statement_print','libreriaCompilador.py',98),
  ('expLineal -> PRINT LPAREN expNormal RPAREN enterTab','expLineal',5,'p_statement_print','libreriaCompilador.py',99),
  ('expLineal -> PRINT LPAREN operacion RPAREN enterTab','expLineal',5,'p_statement_print','libreriaCompilador.py',100),
  ('expLineal -> PRINT LPAREN expNormal RPAREN enterTabTab','expLineal',5,'p_statement_print','libreriaCompilador.py',101),
  ('expLineal -> PRINT LPAREN operacion RPAREN enterTabTab','expLineal',5,'p_statement_print','libreriaCompilador.py',102),
  ('string -> STRING','string',1,'p_statement_string','libreriaCompilador.py',107),
  ('operacion -> expNormal PLUS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',112),
  ('operacion -> expNormal MINUS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',113),
  ('operacion -> expNormal TIMES expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',114),
  ('operacion -> expNormal DIVIDE expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',115),
  ('operacion -> expNormal EXPONENTE expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',116),
  ('operacion -> expNormal COMPARISON expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',117),
  ('operacion -> expNormal LOGICOS expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',118),
  ('operacion -> expNormal MODULO expNormal','operacion',3,'p_expression_binop','libreriaCompilador.py',119),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','libreriaCompilador.py',136),
  ('boolean -> CONSTANTES','boolean',1,'p_expression_constant','libreriaCompilador.py',141),
  ('expLineal -> LPAREN expLineal RPAREN','expLineal',3,'p_expression_group','libreriaCompilador.py',148),
  ('enterTab -> NEWLN TAB statement enterTab','enterTab',4,'p_expression_enter_tab','libreriaCompilador.py',154),
  ('enterTab -> NEWLN TAB statement enterNormal','enterTab',4,'p_expression_enter_tab','libreriaCompilador.py',155),
  ('enterTab -> NEWLN TAB statement','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',156),
  ('enterTab -> NEWLN TAB expWhileA','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',157),
  ('enterTab -> NEWLN TAB expWhileA ELSE POINTS enterTabTab','enterTab',6,'p_expression_enter_tab','libreriaCompilador.py',158),
  ('enterTab -> NEWLN TAB BREAK','enterTab',3,'p_expression_enter_tab','libreriaCompilador.py',159),
  ('expBooleana -> expNormal COMPARISON expNormal','expBooleana',3,'p_expression_booleana','libreriaCompilador.py',165),
  ('expBooleana -> expBooleana LOGICOS expBooleana','expBooleana',3,'p_expression_booleana','libreriaCompilador.py',166),
  ('expBooleana -> boolean','expBooleana',1,'p_expression_booleana','libreriaCompilador.py',167),
  ('expBooleana -> LPAREN expBooleana RPAREN','expBooleana',3,'p_expression_booleana_par','libreriaCompilador.py',171),
  ('enterTabTab -> NEWLN TAB TAB statement enterNormal','enterTabTab',5,'p_expression_enter_tab_tab','libreriaCompilador.py',175),
  ('enterTabTab -> NEWLN TAB TAB statement enterTabTab','enterTabTab',5,'p_expression_enter_tab_tab','libreriaCompilador.py',176),
  ('enterTabTab -> NEWLN TAB TAB statement','enterTabTab',4,'p_expression_enter_tab_tab','libreriaCompilador.py',177),
  ('enterTabTab -> NEWLN TAB TAB BREAK','enterTabTab',4,'p_expression_enter_tab_tab','libreriaCompilador.py',178),
  ('enterNormal -> NEWLN statement enterNormal','enterNormal',3,'p_expression_enter_normal','libreriaCompilador.py',182),
  ('enterNormal -> NEWLN statement','enterNormal',2,'p_expression_enter_normal','libreriaCompilador.py',183),
  ('enterNormal -> NEWLN ELSE POINTS enterTab','enterNormal',4,'p_expression_enter_normal','libreriaCompilador.py',184),
  ('expLineal -> operacion','expLineal',1,'p_expression_lineal','libreriaCompilador.py',188),
  ('expLineal -> operacion enterNormal','expLineal',2,'p_expression_lineal','libreriaCompilador.py',189),
  ('expLineal -> operacion enterTab','expLineal',2,'p_expression_lineal','libreriaCompilador.py',190),
  ('expLineal -> operacion enterTabTab','expLineal',2,'p_expression_lineal','libreriaCompilador.py',191),
  ('expLineal -> assign','expLineal',1,'p_expression_lineal','libreriaCompilador.py',192),
  ('expLineal -> assign enterTab','expLineal',2,'p_expression_lineal','libreriaCompilador.py',193),
  ('expLineal -> assign enterTabTab','expLineal',2,'p_expression_lineal','libreriaCompilador.py',194),
  ('expLineal -> assign enterNormal','expLineal',2,'p_expression_lineal','libreriaCompilador.py',195),
  ('expNormal -> NUMBER','expNormal',1,'p_expression_normal','libreriaCompilador.py',199),
  ('expNormal -> string','expNormal',1,'p_expression_normal','libreriaCompilador.py',200),
  ('expNormal -> boolean','expNormal',1,'p_expression_normal','libreriaCompilador.py',201),
  ('expNormal -> NAME','expNormal',1,'p_expression_name','libreriaCompilador.py',205),
  ('expWhileA -> WHILE expBooleana POINTS enterTabTab','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',213),
  ('expWhileA -> WHILE expBooleana POINTS expLineal','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',214),
  ('expWhileA -> WHILE NAME POINTS enterTabTab','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',215),
  ('expWhileA -> WHILE NAME POINTS expLineal','expWhileA',4,'p_expression_whileA','libreriaCompilador.py',216),
  ('expWhile -> WHILE expBooleana POINTS enterTab','expWhile',4,'p_expression_while','libreriaCompilador.py',219),
  ('expWhile -> WHILE expBooleana POINTS expLineal','expWhile',4,'p_expression_while','libreriaCompilador.py',220),
  ('expWhile -> WHILE NAME POINTS enterTab','expWhile',4,'p_expression_while','libreriaCompilador.py',221),
  ('expWhile -> WHILE NAME POINTS expLineal','expWhile',4,'p_expression_while','libreriaCompilador.py',222),
  ('expWhile -> WHILE NAME LPAREN RPAREN POINTS enterTab','expWhile',6,'p_expression_while','libreriaCompilador.py',223),
  ('expWhile -> WHILE NAME LPAREN RPAREN POINTS expLineal','expWhile',6,'p_expression_while','libreriaCompilador.py',224),
]
