
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCOMPARISONleftLOGICOSleftMODULOleftEXPONENTErightUMINUSCONSTANTES NAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN WHILE EXPONENTE COMPARISON POINTS LOGICOS MODULO PRINT STRING BREAK ELSE NEWLINEstatement : NAME EQUALS expression NEWLINE NAME EQUALS expressionstatement : expression\n                 | expression NEWLINE expressionstatement : PRINT LPAREN string RPARENstring : STRINGexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENTE expression\n                  | expression COMPARISON expression\n                  | expression LOGICOS expression\n                  | expression MODULO expressionexpression : MINUS expression %prec UMINUSexpression : CONSTANTESexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEstatement : WHILE expression POINTS statement\n                 | WHILE expression POINTS expression ELSE statement\n                 | WHILE expression POINTS statement BREAK'
    
_lr_action_items = {'COMPARISON':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[15,-15,-18,-17,-18,-14,15,15,-10,-12,-11,15,15,-13,15,15,15,15,-16,15,15,]),'PRINT':([0,36,44,],[1,1,1,]),'EQUALS':([7,45,],[23,47,]),'EXPONENTE':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[13,-15,-18,-17,-18,-14,13,13,-10,13,13,13,13,13,13,13,13,13,-16,13,13,]),'MINUS':([0,2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,41,44,47,48,],[2,2,17,2,-15,-18,2,-17,-18,-14,2,2,2,2,2,2,2,2,2,17,2,17,-10,-12,-11,17,-7,-13,-8,-9,-6,2,17,-16,17,2,2,17,]),'TIMES':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[19,-15,-18,-17,-18,-14,19,19,-10,-12,-11,19,19,-13,-8,-9,19,19,-16,19,19,]),'MODULO':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[18,-15,-18,-17,-18,-14,18,18,-10,18,18,18,18,-13,18,18,18,18,-16,18,18,]),'NUMBER':([0,2,5,8,13,14,15,16,17,18,19,20,21,23,36,44,47,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'$end':([3,4,6,7,9,11,12,27,28,29,30,31,32,33,34,35,38,39,40,41,43,46,48,],[0,-2,-15,-18,-17,-18,-14,-10,-12,-11,-3,-7,-13,-8,-9,-6,-16,-4,-19,-2,-21,-20,-1,]),'LOGICOS':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[14,-15,-18,-17,-18,-14,14,14,-10,-12,14,14,14,-13,14,14,14,14,-16,14,14,]),'NEWLINE':([4,6,7,9,11,12,27,28,29,31,32,33,34,35,37,38,41,],[16,-15,-18,-17,-18,-14,-10,-12,-11,-7,-13,-8,-9,-6,42,-16,16,]),'ELSE':([6,7,9,11,12,27,28,29,31,32,33,34,35,38,41,],[-15,-18,-17,-18,-14,-10,-12,-11,-7,-13,-8,-9,-6,-16,44,]),'LPAREN':([0,1,2,5,8,13,14,15,16,17,18,19,20,21,23,36,44,47,],[8,10,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'POINTS':([6,9,11,12,22,27,28,29,31,32,33,34,35,38,],[-15,-17,-18,-14,36,-10,-12,-11,-7,-13,-8,-9,-6,-16,]),'WHILE':([0,36,44,],[5,5,5,]),'BREAK':([4,6,7,9,11,12,27,28,29,30,31,32,33,34,35,38,39,40,41,43,46,48,],[-2,-15,-18,-17,-18,-14,-10,-12,-11,-3,-7,-13,-8,-9,-6,-16,-4,43,-2,-21,-20,-1,]),'CONSTANTES':([0,2,5,8,13,14,15,16,17,18,19,20,21,23,36,44,47,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NAME':([0,2,5,8,13,14,15,16,17,18,19,20,21,23,36,42,44,47,],[7,11,11,11,11,11,11,11,11,11,11,11,11,11,7,45,7,11,]),'RPAREN':([6,9,11,12,24,25,26,27,28,29,31,32,33,34,35,38,],[-15,-17,-18,-14,38,39,-5,-10,-12,-11,-7,-13,-8,-9,-6,-16,]),'DIVIDE':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[20,-15,-18,-17,-18,-14,20,20,-10,-12,-11,20,20,-13,-8,-9,20,20,-16,20,20,]),'STRING':([10,],[26,]),'PLUS':([4,6,7,9,11,12,22,24,27,28,29,30,31,32,33,34,35,37,38,41,48,],[21,-15,-18,-17,-18,-14,21,21,-10,-12,-11,21,-7,-13,-8,-9,-6,21,-16,21,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string':([10,],[25,]),'statement':([0,36,44,],[3,40,46,]),'expression':([0,2,5,8,13,14,15,16,17,18,19,20,21,23,36,44,47,],[4,12,22,24,27,28,29,30,31,32,33,34,35,37,41,4,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression NEWLINE NAME EQUALS expression','statement',7,'p_statement_assign','compilador.py',76),
  ('statement -> expression','statement',1,'p_statement_expr','compilador.py',82),
  ('statement -> expression NEWLINE expression','statement',3,'p_statement_expr','compilador.py',83),
  ('statement -> PRINT LPAREN string RPAREN','statement',4,'p_statement_print','compilador.py',87),
  ('string -> STRING','string',1,'p_statement_string','compilador.py',91),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','compilador.py',95),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','compilador.py',96),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','compilador.py',97),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','compilador.py',98),
  ('expression -> expression EXPONENTE expression','expression',3,'p_expression_binop','compilador.py',99),
  ('expression -> expression COMPARISON expression','expression',3,'p_expression_binop','compilador.py',100),
  ('expression -> expression LOGICOS expression','expression',3,'p_expression_binop','compilador.py',101),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','compilador.py',102),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','compilador.py',119),
  ('expression -> CONSTANTES','expression',1,'p_expression_constant','compilador.py',123),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','compilador.py',130),
  ('expression -> NUMBER','expression',1,'p_expression_number','compilador.py',134),
  ('expression -> NAME','expression',1,'p_expression_name','compilador.py',138),
  ('statement -> WHILE expression POINTS statement','statement',4,'p_expression_while','compilador.py',149),
  ('statement -> WHILE expression POINTS expression ELSE statement','statement',6,'p_expression_while','compilador.py',150),
  ('statement -> WHILE expression POINTS statement BREAK','statement',5,'p_expression_while','compilador.py',151),
]
